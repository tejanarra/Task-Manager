{"version":3,"file":"static/js/871.b13ec57b.chunk.js","mappings":"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","sources":["components/ConfirmationModal.js","components/taskItem/ReminderCheckbox.js","components/taskItem/TaskReminders.js","components/taskItem/TaskItem.js","components/AIChatModal.js","components/TaskList.js","services/api.js","utils/dateUtils.js"],"sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Styles/ConfirmationModal.css\";\n\nconst ConfirmationModal = ({\n  theme,\n  show,\n  title = \"Confirm Action\",\n  message = \"Are you sure you want to proceed?\",\n  onConfirm,\n  onCancel,\n}) => {\n  if (!show) return null;\n\n  return (\n    <div\n      className=\"custom-modal-overlay d-flex align-items-center justify-content-center\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      onClick={onCancel}\n    >\n      <div\n        className=\"custom-modal-content\"\n        role=\"document\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"custom-modal-header\">\n          <h5 className=\"modal2-title fw-bold\">{title}</h5>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            aria-label=\"Close\"\n            onClick={onCancel}\n          ></button>\n        </div>\n        <div className=\"custom-modal-body\">\n          <p className={`text-${theme === \"dark\" ? \"light\" : \"muted\"} mb-4`}>\n            {message}\n          </p>\n        </div>\n        <div className=\"custom-modal-footer d-flex justify-content-end gap-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={onCancel}\n          >\n            Cancel\n          </button>\n          <button type=\"button\" className=\"btn sign-in-btn\" onClick={onConfirm}>\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationModal;\n","import React from \"react\";\n\nconst ReminderCheckbox = ({ checked, onChange, label }) => (\n  <label className=\"reminder-checkbox-label d-inline-flex align-items-center\">\n    <input\n      type=\"checkbox\"\n      className=\"form-check-input me-2\"\n      checked={checked}\n      onChange={(e) => onChange(e.target.checked)}\n    />\n    <span>{label}</span>\n  </label>\n);\n\nexport default ReminderCheckbox;\n","import React, { useState, useMemo } from \"react\";\nimport ReminderCheckbox from \"./ReminderCheckbox\";\nimport { formatDateTimeLocal } from \"../../utils/dateUtils\";\nimport \"./Styles/TaskReminders.css\";\n\nconst isDaily = (r) => r?.type === \"daily\" || r?.type === \"DAILY\";\nconst isWeekly = (r) => r?.type === \"weekly\" || r?.type === \"WEEKLY\";\n\nexport const formatHoursLabel = (h) => {\n  if (h < 1) return `${Math.round(h * 60)} min`;\n  if (h < 24) return `${h} hr${h !== 1 ? \"s\" : \"\"}`;\n  const days = h / 24;\n  if (days < 7) return `${Math.round(days)} day${days !== 1 ? \"s\" : \"\"}`;\n  return `${Math.round(days / 7)} week${days / 7 !== 1 ? \"s\" : \"\"}`;\n};\n\n// ✅ Conversions between Local ↔ UTC (DST safe)\nconst parseLocalHour = (hh) => {\n  const [h] = hh.split(\":\");\n  return Math.min(Math.max(parseInt(h), 0), 23);\n};\n\nconst localHourToUTC = (localHour) => {\n  const d = new Date();\n  d.setHours(localHour, 0, 0, 0);\n  return d.getUTCHours();\n};\n\nconst utcHourToLocalHH = (utcHour) => {\n  const base = new Date(Date.UTC(2000, 0, 1, utcHour, 0, 0));\n  const hh = base.getHours();\n  return `${String(hh).padStart(2, \"0\")}:00`;\n};\n\n// Weekly conversion helpers\nconst localWeeklyToUTC = (localDay, localHour) => {\n  const now = new Date();\n  const diff = (localDay - now.getDay() + 7) % 7;\n  const d = new Date(now);\n  d.setDate(now.getDate() + diff);\n  d.setHours(localHour, 0, 0, 0);\n  return {\n    utcDay: d.getUTCDay(),\n    utcHour: d.getUTCHours(),\n  };\n};\n\nconst utcWeeklyToLocal = (utcDay, utcHour) => {\n  const d = new Date(Date.UTC(2000, 0, 2 + utcDay, utcHour));\n  return {\n    localDay: d.getDay(),\n    localHour: d.getHours(),\n  };\n};\n\nconst DAY_LABELS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\nconst TaskReminders = ({\n  tempDeadline,\n  tempReminders,\n  setTempReminders,\n  theme,\n  ALL_INTERVALS,\n}) => {\n  const deadline = tempDeadline ? new Date(tempDeadline) : null;\n  const now = new Date();\n  const diffHrs = deadline ? (deadline - now) / 36e5 : 0;\n\n  const maxDays = Math.floor(diffHrs / 24);\n  const maxWeeks = Math.floor(diffHrs / 168);\n\n  const dailyObj = useMemo(() => tempReminders.find(isDaily), [tempReminders]);\n  const weeklyObj = useMemo(\n    () => tempReminders.find(isWeekly),\n    [tempReminders]\n  );\n\n  const hasDaily = !!dailyObj;\n  const hasWeekly = !!weeklyObj;\n\n  const [dailyTime, setDailyTime] = useState(\n    dailyObj?.hourOfDayUTC != null\n      ? utcHourToLocalHH(dailyObj.hourOfDayUTC)\n      : \"09:00\"\n  );\n\n  const [weeklyDay, setWeeklyDay] = useState(() =>\n    weeklyObj?.dayOfWeek != null\n      ? utcWeeklyToLocal(weeklyObj.dayOfWeek, weeklyObj.hourOfDayUTC).localDay\n      : 1\n  );\n  const [weeklyTime, setWeeklyTime] = useState(() =>\n    weeklyObj?.hourOfDayUTC != null\n      ? `${String(\n          utcWeeklyToLocal(weeklyObj.dayOfWeek, weeklyObj.hourOfDayUTC)\n            .localHour\n        ).padStart(2, \"0\")}:00`\n      : \"09:00\"\n  );\n\n  const toggleDaily = (checked) => {\n    setTempReminders((prev) => {\n      const filtered = prev.filter((r) => !isDaily(r));\n      if (!checked) return filtered;\n      const hrLocal = parseLocalHour(dailyTime);\n      return [\n        ...filtered,\n        {\n          type: \"daily\",\n          hourOfDayUTC: localHourToUTC(hrLocal),\n        },\n      ];\n    });\n  };\n\n  const onDailyTime = (v) => {\n    setDailyTime(v);\n    const hrLocal = parseLocalHour(v);\n    setTempReminders((prev) =>\n      prev.map((r) =>\n        isDaily(r) ? { ...r, hourOfDayUTC: localHourToUTC(hrLocal) } : r\n      )\n    );\n  };\n\n  const toggleWeekly = (checked) => {\n    setTempReminders((prev) => {\n      const filtered = prev.filter((r) => !isWeekly(r));\n      if (!checked) return filtered;\n      const hrLocal = parseLocalHour(weeklyTime);\n      const { utcDay, utcHour } = localWeeklyToUTC(weeklyDay, hrLocal);\n      return [\n        ...filtered,\n        {\n          type: \"weekly\",\n          dayOfWeek: utcDay,\n          hourOfDayUTC: utcHour,\n        },\n      ];\n    });\n  };\n\n  const updateWeeklyDay = (v) => {\n    const d = Number(v);\n    setWeeklyDay(d);\n    setTempReminders((prev) =>\n      prev.map((r) =>\n        isWeekly(r)\n          ? {\n              ...r,\n              ...localWeeklyToUTC(d, parseLocalHour(weeklyTime)),\n            }\n          : r\n      )\n    );\n  };\n\n  const updateWeeklyTime = (v) => {\n    setWeeklyTime(v);\n    setTempReminders((prev) =>\n      prev.map((r) =>\n        isWeekly(r)\n          ? {\n              ...r,\n              ...localWeeklyToUTC(weeklyDay, parseLocalHour(v)),\n            }\n          : r\n      )\n    );\n  };\n\n  // One-time reminders\n  const toggleOneTime = (val, checked) => {\n    setTempReminders((prev) => {\n      if (!checked)\n        return prev.filter(\n          (r) =>\n            isWeekly(r) || isDaily(r) || Math.abs(r.remindBefore - val) >= 0.01\n        );\n\n      const exists = prev.some(\n        (r) => !r.type && Math.abs(r.remindBefore - val) < 0.01\n      );\n      if (!exists) return [...prev, { remindBefore: val, sent: false }];\n      return prev;\n    });\n  };\n\n  const [custom, setCustom] = useState(\"\");\n  const addCustom = () => {\n    if (!custom || !deadline) return;\n    const d = new Date(custom);\n    if (d >= deadline) return;\n    const hours = (deadline - d) / 36e5;\n    if (hours <= 0 || hours > diffHrs) return;\n\n    setTempReminders((prev) => [\n      ...prev,\n      { remindBefore: hours, customDate: d.toISOString() },\n    ]);\n    setCustom(\"\");\n  };\n\n  const defaultIntervals = ALL_INTERVALS.filter((i) => i.value <= diffHrs);\n  const customIntervals = tempReminders\n    .filter(\n      (r) =>\n        !isDaily(r) &&\n        !isWeekly(r) &&\n        r.remindBefore <= diffHrs &&\n        !ALL_INTERVALS.some((ai) => Math.abs(ai.value - r.remindBefore) < 0.01)\n    )\n    .map((r) => ({\n      value: r.remindBefore,\n      label: r.customDate\n        ? new Date(r.customDate).toLocaleString()\n        : formatHoursLabel(r.remindBefore),\n    }));\n\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"task-reminders-container\">\n      <div className=\"reminders-dropdown\" onClick={() => setOpen(!open)}>\n        <div className=\"reminders-dropdown-header\">\n          <h6>Reminders</h6>\n          <i className={`bi ${open ? \"bi-chevron-up\" : \"bi-chevron-down\"}`} />\n        </div>\n      </div>\n\n      {open && (\n        <div className=\"reminders-dropdown-content\">\n          {/* Custom absolute reminder */}\n          <div className=\"custom-reminder-section\">\n            <label className=\"reminder-section-label\">\n              Add Custom Reminder:\n            </label>\n            <div className=\"custom-reminder-input-group\">\n              <input\n                type=\"datetime-local\"\n                value={custom}\n                onChange={(e) => setCustom(e.target.value)}\n                min={formatDateTimeLocal(new Date().toISOString())}\n                max={\n                  tempDeadline ? formatDateTimeLocal(tempDeadline) : undefined\n                }\n              />\n              <button\n                className={`btn btn-sm ${\n                  theme === \"dark\" ? \"btn-outline-light\" : \"btn-outline-dark\"\n                }`}\n                onClick={addCustom}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n\n          {/* Recurring */}\n          {(maxDays > 0 || maxWeeks > 0) && (\n            <div className=\"recurring-reminders-section\">\n              <label className=\"reminder-section-label\">\n                Recurring Reminders:\n              </label>\n\n              {/* Daily */}\n              <div className=\"recurring-option\">\n                <input\n                  type=\"checkbox\"\n                  checked={hasDaily}\n                  onChange={(e) => toggleDaily(e.target.checked)}\n                />\n                <span className=\"ms-2\">Daily at</span>\n                <input\n                  type=\"time\"\n                  value={dailyTime}\n                  step={3600}\n                  disabled={!hasDaily}\n                  onChange={(e) => onDailyTime(e.target.value)}\n                  className=\"ms-2\"\n                />\n              </div>\n\n              {/* Weekly */}\n              <div className=\"recurring-option mt-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={hasWeekly}\n                  onChange={(e) => toggleWeekly(e.target.checked)}\n                />\n                <span className=\"ms-2\">Weekly on</span>\n                <select\n                  value={weeklyDay}\n                  disabled={!hasWeekly}\n                  className=\"mx-2\"\n                  onChange={(e) => updateWeeklyDay(e.target.value)}\n                >\n                  {DAY_LABELS.map((d, i) => (\n                    <option key={i} value={i}>\n                      {d}\n                    </option>\n                  ))}\n                </select>\n                <input\n                  type=\"time\"\n                  value={weeklyTime}\n                  step={3600}\n                  disabled={!hasWeekly}\n                  onChange={(e) => updateWeeklyTime(e.target.value)}\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Default One-time */}\n          {defaultIntervals.length > 0 && (\n            <div className=\"reminder-section\">\n              <label className=\"reminder-section-label\">\n                One-time Presets:\n              </label>\n              <div className=\"reminder-grid\">\n                {defaultIntervals.map((i) => (\n                  <ReminderCheckbox\n                    key={i.value}\n                    checked={\n                      !!tempReminders.find(\n                        (r) =>\n                          !r.type && Math.abs(r.remindBefore - i.value) < 0.01\n                      )\n                    }\n                    label={i.label}\n                    onChange={(checked) => toggleOneTime(i.value, checked)}\n                  />\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Custom one-time list */}\n          {customIntervals.length > 0 && (\n            <div className=\"reminder-section\">\n              <label className=\"reminder-section-label\">Custom:</label>\n              <div className=\"reminder-grid\">\n                {customIntervals.map((i) => (\n                  <ReminderCheckbox\n                    key={i.value}\n                    checked\n                    label={i.label}\n                    onChange={(checked) => toggleOneTime(i.value, checked)}\n                  />\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskReminders;\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport {\n  deleteTask,\n  updateTask,\n  updateTaskReminders,\n} from \"../../services/api\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ConfirmationModal from \"../ConfirmationModal\";\nimport TaskReminders from \"./TaskReminders\";\nimport { formatRelativeTime, formatDateTimeLocal } from \"../../utils/dateUtils\";\nimport \"./Styles/TaskItem.css\";\n\n// Presets (1h, 1d, 1w)\nconst ALL_INTERVALS = [\n  { value: 1, label: \"1 hr\" },\n  { value: 24, label: \"1 day\" },\n  { value: 168, label: \"1 week\" },\n];\n\n// 🔁 UI -> backend: enforce correct enum values\nconst normalizeStatusForBackend = (value) => {\n  switch (value) {\n    case \"in-progress\":\n      return \"IN_PROGRESS\";\n    case \"completed\":\n      return \"COMPLETED\";\n    default:\n      return \"NOT_STARTED\";\n  }\n};\n\n// ✅ Convert UI reminders → backend format\nconst toBackendReminders = (uiReminders, deadlineUTC) => {\n  const deadline = deadlineUTC ? new Date(deadlineUTC) : null;\n  if (!deadline) return [];\n\n  const result = [];\n\n  uiReminders.forEach((r) => {\n    // Recurring\n    if (r.type === \"daily\") {\n      result.push({\n        type: \"DAILY\",\n        triggerAtUTC: null,\n        hourOfDayUTC: r.hourOfDayUTC, // 0-23 UTC hour\n        dayOfWeek: null,\n      });\n      return;\n    }\n\n    if (r.type === \"weekly\") {\n      result.push({\n        type: \"WEEKLY\",\n        triggerAtUTC: null,\n        hourOfDayUTC: r.hourOfDayUTC,\n        dayOfWeek: r.dayOfWeek, // 0-6 UTC weekday\n      });\n      return;\n    }\n\n    // One-time reminders\n    if (typeof r.remindBefore === \"number\") {\n      const triggerMs = deadline.getTime() - r.remindBefore * 3600 * 1000;\n      result.push({\n        type: \"ONE_TIME\",\n        triggerAtUTC: new Date(triggerMs).toISOString(),\n        hourOfDayUTC: null,\n        dayOfWeek: null,\n      });\n      return;\n    }\n\n    // Custom absolute datetime reminder\n    if (r.customDate) {\n      result.push({\n        type: \"ONE_TIME\",\n        triggerAtUTC: new Date(r.customDate).toISOString(),\n        hourOfDayUTC: null,\n        dayOfWeek: null,\n      });\n    }\n  });\n\n  return result;\n};\n\nconst TaskItem = ({ theme, task, setTasks, isNewTask, onSave, onCancel }) => {\n  const [isEditing, setIsEditing] = useState(isNewTask);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const [tempTitle, setTempTitle] = useState(task.title);\n  const [tempDescription, setTempDescription] = useState(task.description);\n  const [tempStatus, setTempStatus] = useState(task.status || \"not-started\");\n  const [tempDeadline, setTempDeadline] = useState(task.deadlineUTC || null);\n  const [tempReminders, setTempReminders] = useState(\n    Array.isArray(task.reminders) ? task.reminders : []\n  );\n\n  const cardRef = useRef(null);\n\n  const handleCancel = useCallback(() => {\n    setTempTitle(task.title);\n    setTempDescription(task.description);\n    setTempStatus(task.status || \"not-started\");\n    setTempDeadline(task.deadlineUTC || null);\n    setTempReminders(Array.isArray(task.reminders) ? task.reminders : []);\n    isNewTask ? onCancel(task.id) : setIsEditing(false);\n  }, [task, isNewTask, onCancel]);\n\n  // ✅ Click-outside cancel only for editing existing tasks\n  useEffect(() => {\n    const handler = (e) => {\n      if (\n        isEditing &&\n        !isNewTask &&\n        cardRef.current &&\n        !cardRef.current.contains(e.target)\n      ) {\n        handleCancel();\n      }\n    };\n    document.addEventListener(\"mousedown\", handler);\n    return () => document.removeEventListener(\"mousedown\", handler);\n  }, [isEditing, handleCancel, isNewTask]);\n\n  const stripColor =\n    tempStatus === \"completed\"\n      ? \"#007a00\"\n      : tempStatus === \"in-progress\"\n      ? \"#daa520\"\n      : \"#a00000\";\n\n  const isDeadlineValid = tempDeadline && new Date(tempDeadline) > new Date();\n\n  const getReminderSummary = () => {\n    if (!tempReminders?.length) return null;\n    const daily = tempReminders.filter((r) => r.type === \"daily\").length;\n    const weekly = tempReminders.filter((r) => r.type === \"weekly\").length;\n    const once = tempReminders.filter((r) => !r.type).length;\n    return [\n      daily > 0 ? `Daily (${daily})` : null,\n      weekly > 0 ? `Weekly (${weekly})` : null,\n      once > 0 ? `One-time (${once})` : null,\n    ]\n      .filter(Boolean)\n      .join(\", \");\n  };\n\n  const reminderSummary = getReminderSummary();\n\n  const handleSave = async () => {\n    if (!tempTitle.trim() || !tempDescription.trim()) return;\n\n    setIsLoading(true);\n\n    const deadlineISO = tempDeadline\n      ? new Date(tempDeadline).toISOString()\n      : null;\n\n    const updatedFields = {\n      title: tempTitle.trim(),\n      description: tempDescription.trim(),\n      status: normalizeStatusForBackend(tempStatus),\n      deadlineUTC: deadlineISO,\n    };\n\n    const formattedReminders = deadlineISO\n      ? toBackendReminders(tempReminders, deadlineISO)\n      : [];\n\n    try {\n      if (isNewTask) {\n        // Parent creates task, then reminders patched\n        onSave({\n          ...task,\n          ...updatedFields,\n          reminders: formattedReminders,\n        });\n        setIsEditing(false);\n      } else {\n        // Existing task flow\n        const updated = await updateTask(task.id, updatedFields);\n        await updateTaskReminders(task.id, formattedReminders);\n\n        const finalTask = {\n          ...updated.data,\n          reminders: formattedReminders,\n        };\n\n        setTasks((prev) => prev.map((t) => (t.id === task.id ? finalTask : t)));\n        setIsEditing(false);\n      }\n    } catch (err) {\n      console.error(\"Task update failed\", err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const confirmDelete = async () => {\n    setIsLoading(true);\n    try {\n      await deleteTask(task.id);\n      setTasks((p) => p.filter((t) => t.id !== task.id));\n    } catch (err) {\n      console.error(\"Delete failed\", err);\n    } finally {\n      setIsLoading(false);\n      setShowDeleteModal(false);\n    }\n  };\n\n  return (\n    <>\n      <div\n        ref={cardRef}\n        className={`task-card ${theme === \"dark\" ? \"dark-mode\" : \"\"} ${\n          isLoading ? \"loading\" : \"\"\n        } ${isNewTask ? \"new-task\" : \"\"}`}\n        onClick={() => !isEditing && setIsEditing(true)}\n      >\n        <div className=\"task-strip\" style={{ backgroundColor: stripColor }} />\n\n        <div className=\"task-card-content\">\n          {!isEditing && (\n            <i\n              className={`bi ${\n                tempStatus === \"completed\"\n                  ? \"bi-check-circle\"\n                  : tempStatus === \"in-progress\"\n                  ? \"bi-hourglass\"\n                  : \"bi-ban\"\n              } status-icon`}\n              style={{ color: stripColor }}\n            />\n          )}\n\n          {isEditing ? (\n            <div className=\"task-form-grid\">\n              <div className=\"task-form-group full-width\">\n                <label className=\"form-label\">Title</label>\n                <input\n                  value={tempTitle}\n                  onChange={(e) => setTempTitle(e.target.value)}\n                  className=\"form-control\"\n                />\n              </div>\n\n              <div className=\"task-form-group full-width\">\n                <label className=\"form-label\">Description</label>\n                <textarea\n                  rows={3}\n                  value={tempDescription}\n                  onChange={(e) => setTempDescription(e.target.value)}\n                  className=\"form-control\"\n                />\n              </div>\n\n              <div className=\"task-form-group\">\n                <label className=\"form-label\">Status</label>\n                <select\n                  className=\"form-select\"\n                  value={tempStatus}\n                  onChange={(e) => setTempStatus(e.target.value)}\n                >\n                  <option value=\"not-started\">Not Started</option>\n                  <option value=\"in-progress\">In Progress</option>\n                  <option value=\"completed\">Completed</option>\n                </select>\n              </div>\n\n              <div className=\"task-form-group\">\n                <label className=\"form-label\">Deadline</label>\n                <input\n                  type=\"datetime-local\"\n                  value={tempDeadline ? formatDateTimeLocal(tempDeadline) : \"\"}\n                  onChange={(e) => setTempDeadline(e.target.value)}\n                  className=\"form-control\"\n                />\n              </div>\n\n              {isDeadlineValid && (\n                <div className=\"task-form-group full-width\">\n                  <TaskReminders\n                    tempDeadline={tempDeadline}\n                    tempReminders={tempReminders}\n                    setTempReminders={setTempReminders}\n                    theme={theme}\n                    ALL_INTERVALS={ALL_INTERVALS}\n                  />\n                </div>\n              )}\n            </div>\n          ) : (\n            <>\n              <h5 className=\"task-title\" style={{ color: stripColor }}>\n                {tempTitle}\n              </h5>\n              <p className=\"task-description\">{tempDescription}</p>\n            </>\n          )}\n\n          {/* Metadata display */}\n          <div className=\"task-metadata\">\n            <div className=\"task-metadata-item\">\n              <strong>Created</strong>\n              <span>{formatRelativeTime(task.createdAt)}</span>\n            </div>\n            <div className=\"task-metadata-item\">\n              <strong>Deadline</strong>\n              <span>\n                {task.deadlineUTC\n                  ? formatRelativeTime(task.deadlineUTC)\n                  : \"No deadline\"}\n              </span>\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          {isEditing && (\n            <div className=\"task-actions\">\n              {!isNewTask && (\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setShowDeleteModal(true);\n                  }}\n                  disabled={isLoading}\n                >\n                  {isLoading ? \"Deleting...\" : \"Delete\"}\n                </button>\n              )}\n              <button\n                className=\"btn btn-dark\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleSave();\n                }}\n                disabled={isLoading || !tempTitle.trim()}\n              >\n                {isLoading ? \"Saving...\" : \"Save\"}\n              </button>\n            </div>\n          )}\n\n          {!isEditing && reminderSummary && (\n            <div className=\"reminder-indicator\">\n              <i className=\"bi bi-clock\" /> <small>{reminderSummary}</small>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Delete Confirmation */}\n      <ConfirmationModal\n        theme={theme}\n        show={showDeleteModal}\n        title=\"Delete Task\"\n        message=\"Are you sure you want to delete this task?\"\n        onConfirm={confirmDelete}\n        onCancel={() => setShowDeleteModal(false)}\n      />\n    </>\n  );\n};\n\nexport default TaskItem;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { generateAITask, sendAIChatMessage } from \"../services/api\";\nimport \"../Styles/AIChatModal.css\";\n\nconst AIChatModal = ({ show, onClose, onTaskGenerated, theme }) => {\n  const [mode, setMode] = useState(\"quick\"); // 'quick' or 'chat'\n  const [quickPrompt, setQuickPrompt] = useState(\"\");\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const chatEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (show && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [show, mode]);\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [chatMessages]);\n\n  const handleQuickGenerate = async () => {\n    if (!quickPrompt.trim()) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    const result = await generateAITask(quickPrompt);\n\n    if (result.success) {\n      const aiTask = result.data;\n\n      // Create task object\n      const newTask = {\n        id: `temp-${Date.now()}`,\n        title: aiTask.title,\n        description: aiTask.description,\n        status: aiTask.status || \"not-started\",\n        deadline: aiTask.deadline,\n        reminders: aiTask.reminders || [],\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        priority: 1,\n      };\n\n      onTaskGenerated(newTask);\n      setQuickPrompt(\"\");\n      onClose();\n    } else {\n      setError(result.error);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleChatSend = async () => {\n    if (!chatInput.trim()) return;\n\n    const userMessage = {\n      role: \"user\",\n      content: chatInput.trim(),\n      timestamp: new Date().toISOString(),\n    };\n\n    setChatMessages((prev) => [...prev, userMessage]);\n    setChatInput(\"\");\n    setIsLoading(true);\n    setError(null);\n\n    const conversationHistory = chatMessages.map((msg) => ({\n      role: msg.role,\n      content: msg.content,\n    }));\n\n    const result = await sendAIChatMessage(\n      userMessage.content,\n      conversationHistory\n    );\n\n    if (result.success) {\n      const aiMessage = {\n        role: \"assistant\",\n        content: result.data.reply,\n        timestamp: new Date().toISOString(),\n      };\n      setChatMessages((prev) => [...prev, aiMessage]);\n    } else {\n      setError(result.error);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleGenerateFromChat = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    if (chatMessages.length === 0) {\n      setError(\"No conversation found to generate task from\");\n      setIsLoading(false);\n      return;\n    }\n\n    // Create a comprehensive prompt from the entire conversation\n    const conversationSummary = chatMessages\n      .map(\n        (msg) => `${msg.role === \"user\" ? \"User\" : \"Assistant\"}: ${msg.content}`\n      )\n      .join(\"\\n\");\n\n    const contextualPrompt = `Based on this conversation, create a task:\\n\\n${conversationSummary}\\n\\nCreate a detailed task with appropriate deadline and reminders based on the user's requirements discussed above.`;\n\n    const result = await generateAITask(contextualPrompt);\n\n    if (result.success) {\n      const aiTask = result.data;\n\n      const newTask = {\n        id: `temp-${Date.now()}`,\n        title: aiTask.title,\n        description: aiTask.description,\n        status: aiTask.status || \"not-started\",\n        deadline: aiTask.deadline,\n        reminders: aiTask.reminders || [],\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        priority: 1,\n      };\n\n      onTaskGenerated(newTask);\n      setChatMessages([]);\n      onClose();\n    } else {\n      setError(result.error);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleKeyPress = (e, handler) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handler();\n    }\n  };\n\n  const resetChat = () => {\n    setChatMessages([]);\n    setError(null);\n  };\n\n  if (!show) return null;\n\n  return (\n    <div className=\"ai-modal-overlay\" onClick={onClose}>\n      <div\n        className={`ai-modal-content ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"ai-modal-header\">\n          <h3>\n            <i className=\"bi bi-robot\"></i> AI Task Assistant\n          </h3>\n          <button className=\"close-button\" onClick={onClose}>\n            <i className=\"bi bi-x-lg\"></i>\n          </button>\n        </div>\n\n        <div className=\"ai-mode-selector\">\n          <button\n            className={`mode-button ${mode === \"quick\" ? \"active\" : \"\"}`}\n            onClick={() => setMode(\"quick\")}\n          >\n            <i className=\"bi bi-lightning-charge\"></i>\n            Quick Generate\n          </button>\n          <button\n            className={`mode-button ${mode === \"chat\" ? \"active\" : \"\"}`}\n            onClick={() => setMode(\"chat\")}\n          >\n            <i className=\"bi bi-chat-dots\"></i>\n            Chat Mode\n          </button>\n        </div>\n\n        {error && (\n          <div className=\"error-banner\">\n            <i className=\"bi bi-exclamation-triangle\"></i>\n            {error}\n          </div>\n        )}\n\n        {mode === \"quick\" ? (\n          <div className=\"quick-mode\">\n            <div className=\"quick-mode-content\">\n              <label className=\"form-label\">Describe your task:</label>\n              <textarea\n                ref={inputRef}\n                className=\"form-control\"\n                rows={4}\n                value={quickPrompt}\n                onChange={(e) => setQuickPrompt(e.target.value)}\n                onKeyDown={(e) => handleKeyPress(e, handleQuickGenerate)}\n                placeholder=\"E.g., 'Create a task to prepare for my presentation next Friday' or 'Remind me to buy groceries tomorrow at 5pm'\"\n                disabled={isLoading}\n              />\n              <div className=\"quick-mode-suggestions\">\n                <small>Try these examples:</small>\n                <button\n                  className=\"suggestion-chip\"\n                  onClick={() =>\n                    setQuickPrompt(\n                      \"Schedule a dentist appointment for next week\"\n                    )\n                  }\n                  disabled={isLoading}\n                >\n                  Schedule appointment\n                </button>\n                <button\n                  className=\"suggestion-chip\"\n                  onClick={() =>\n                    setQuickPrompt(\"Plan weekend grocery shopping\")\n                  }\n                  disabled={isLoading}\n                >\n                  Plan shopping\n                </button>\n                <button\n                  className=\"suggestion-chip\"\n                  onClick={() =>\n                    setQuickPrompt(\"Prepare project report due in 3 days\")\n                  }\n                  disabled={isLoading}\n                >\n                  Project deadline\n                </button>\n              </div>\n            </div>\n            <div className=\"modal-actions\">\n              <button\n                className=\"btn btn-secondary\"\n                onClick={onClose}\n                disabled={isLoading}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                onClick={handleQuickGenerate}\n                disabled={!quickPrompt.trim() || isLoading}\n              >\n                {isLoading ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\"></span>\n                    Generating...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"bi bi-magic me-2\"></i>\n                    Generate Task\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"chat-mode\">\n            <div className=\"chat-messages\">\n              {chatMessages.length === 0 ? (\n                <div className=\"chat-empty-state\">\n                  <i className=\"bi bi-chat-heart\"></i>\n                  <p>Start a conversation with AI to create your task</p>\n                  <small>\n                    Ask questions, get suggestions, and refine your task details\n                  </small>\n                </div>\n              ) : (\n                chatMessages.map((msg, index) => (\n                  <div\n                    key={index}\n                    className={`chat-message ${\n                      msg.role === \"user\" ? \"user\" : \"assistant\"\n                    }`}\n                  >\n                    <div className=\"message-avatar\">\n                      {msg.role === \"user\" ? (\n                        <i className=\"bi bi-person-circle\"></i>\n                      ) : (\n                        <i className=\"bi bi-robot\"></i>\n                      )}\n                    </div>\n                    <div className=\"message-content\">\n                      <div className=\"message-text\">{msg.content}</div>\n                      <div className=\"message-time\">\n                        {new Date(msg.timestamp).toLocaleTimeString([], {\n                          hour: \"2-digit\",\n                          minute: \"2-digit\",\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n              {isLoading && (\n                <div className=\"chat-message assistant\">\n                  <div className=\"message-avatar\">\n                    <i className=\"bi bi-robot\"></i>\n                  </div>\n                  <div className=\"message-content\">\n                    <div className=\"typing-indicator\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div ref={chatEndRef} />\n            </div>\n            <div className=\"chat-input-container\">\n              <input\n                ref={inputRef}\n                type=\"text\"\n                className=\"form-control\"\n                value={chatInput}\n                onChange={(e) => setChatInput(e.target.value)}\n                onKeyDown={(e) => handleKeyPress(e, handleChatSend)}\n                placeholder=\"Type your message...\"\n                disabled={isLoading}\n              />\n              <button\n                className=\"send-button\"\n                onClick={handleChatSend}\n                disabled={!chatInput.trim() || isLoading}\n              >\n                <i className=\"bi bi-send-fill\"></i>\n              </button>\n            </div>\n            <div className=\"chat-actions\">\n              <button\n                className=\"btn btn-sm btn-outline-secondary\"\n                onClick={resetChat}\n                disabled={isLoading || chatMessages.length === 0}\n              >\n                <i className=\"bi bi-arrow-clockwise me-1\"></i>\n                Reset\n              </button>\n              <button\n                className=\"btn btn-sm btn-primary\"\n                onClick={handleGenerateFromChat}\n                disabled={isLoading || chatMessages.length === 0}\n              >\n                <i className=\"bi bi-check2-circle me-1\"></i>\n                Create Task\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AIChatModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  fetchTasks,\n  updateTaskPriority,\n  createTask,\n  updateTaskReminders,\n} from \"../services/api\";\nimport { useAuth } from \"../context/AuthContext\";\nimport TaskItem from \"./taskItem/TaskItem\";\nimport AIChatModal from \"./AIChatModal\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"../Styles/TaskList.css\";\n\n// Convert backend enums to UI values\nconst normalizeStatusUI = (backendStatus) => {\n  switch (backendStatus) {\n    case \"IN_PROGRESS\":\n      return \"in-progress\";\n    case \"COMPLETED\":\n      return \"completed\";\n    default:\n      return \"not-started\";\n  }\n};\n\n// Convert backend reminders → UI reminder format\nconst convertBackendRemindersToUI = (task) => {\n  if (!task.reminders?.length || !task.deadlineUTC) return task;\n\n  const deadline = new Date(task.deadlineUTC);\n\n  const converted = task.reminders.map((r) => {\n    if (r.type === \"ONE_TIME\") {\n      return {\n        remindBefore: (deadline - new Date(r.triggerAtUTC)) / (1000 * 60 * 60),\n        sent: false,\n        customDate: r.triggerAtUTC,\n      };\n    }\n    if (r.type === \"DAILY\") {\n      return {\n        type: \"daily\",\n        hourOfDayUTC: r.hourOfDayUTC,\n      };\n    }\n    if (r.type === \"WEEKLY\") {\n      return {\n        type: \"weekly\",\n        hourOfDayUTC: r.hourOfDayUTC,\n        dayOfWeek: r.dayOfWeek,\n      };\n    }\n    return null;\n  });\n\n  return { ...task, reminders: converted.filter(Boolean) };\n};\n\nconst TaskList = ({ theme }) => {\n  const { user, logout } = useAuth();\n  const [tasks, setTasks] = useState(null);\n  const [newTaskId, setNewTaskId] = useState(null);\n  const [showAIModal, setShowAIModal] = useState(false);\n\n  useEffect(() => {\n    if (!user) return;\n\n    fetchTasks()\n      .then((res) => {\n        const mapped = res.data.map((t) => ({\n          ...convertBackendRemindersToUI(t),\n          status: normalizeStatusUI(t.status),\n        }));\n        setTasks(mapped);\n      })\n      .catch((err) => {\n        console.error(\"Load tasks error:\", err);\n        if (err.response?.status === 403) logout();\n      });\n  }, [user, logout]);\n\n  const handleDragEnd = async ({ destination, source }) => {\n    if (!destination || destination.index === source.index) return;\n\n    const reordered = Array.from(tasks);\n    const [moved] = reordered.splice(source.index, 1);\n    reordered.splice(destination.index, 0, moved);\n\n    reordered.forEach((t, i) => (t.priority = i + 1));\n    setTasks(reordered);\n\n    try {\n      await updateTaskPriority(moved.id, destination.index + 1);\n    } catch (err) {\n      console.error(\"Priority update failed:\", err);\n    }\n  };\n\n  const handleAddTask = () => {\n    const newTask = {\n      id: `temp-${Date.now()}`,\n      title: \"\",\n      description: \"\",\n      status: \"not-started\",\n      deadlineUTC: null,\n      reminders: [],\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      priority: tasks?.length + 1 || 1,\n    };\n\n    setNewTaskId(newTask.id);\n    setTasks((prev) => [newTask, ...(prev || [])]);\n  };\n\n  const handleSaveNewTask = async (t) => {\n    try {\n      const res = await createTask(t);\n      const saved = {\n        ...convertBackendRemindersToUI(res.data),\n        status: normalizeStatusUI(res.data.status),\n      };\n\n      if (t.reminders?.length) {\n        await updateTaskReminders(saved.id, t.reminders);\n        saved.reminders = t.reminders;\n      }\n\n      setTasks((prev) => prev.map((x) => (x.id === t.id ? saved : x)));\n      setNewTaskId(null);\n    } catch (err) {\n      console.error(\"Create failed:\", err);\n    }\n  };\n\n  const handleCancelNewTask = (tempId) => {\n    setTasks((p) => p.filter((t) => t.id !== tempId));\n    setNewTaskId(null);\n  };\n\n  const handleAITaskGenerated = (task) => {\n    setNewTaskId(task.id);\n    setTasks((prev) => [task, ...prev]);\n  };\n\n  if (!tasks) return <p className=\"text-center mt-5\">Loading...</p>;\n\n  return (\n    <>\n      <div className=\"container mt-5\">\n        <div className=\"task-container card-body p-3\">\n          <div className=\"d-flex justify-content-between mb-3\">\n            <h2>Your Tasks</h2>\n            <div className=\"d-flex gap-2\">\n              <button\n                className={`btn btn-outline-${\n                  theme === \"dark\" ? \"light\" : \"dark\"\n                }`}\n                onClick={() => setShowAIModal(true)}\n              >\n                <i className=\"bi bi-robot me-2\" /> AI Assistant\n              </button>\n\n              <button\n                className={`btn btn-outline-${\n                  theme === \"dark\" ? \"light\" : \"dark\"\n                }`}\n                onClick={handleAddTask}\n              >\n                <i className=\"bi bi-plus-circle\" /> New Task\n              </button>\n            </div>\n          </div>\n\n          {tasks.length === 0 ? (\n            <p>No tasks yet</p>\n          ) : (\n            <DragDropContext onDragEnd={handleDragEnd}>\n              <Droppable droppableId=\"taskList\">\n                {(provided) => (\n                  <div ref={provided.innerRef} {...provided.droppableProps}>\n                    {tasks\n                      .sort((a, b) => a.priority - b.priority)\n                      .map((task, index) => (\n                        <Draggable\n                          key={task.id}\n                          draggableId={String(task.id)}\n                          index={index}\n                        >\n                          {(provided) => (\n                            <div\n                              className=\"mb-3\"\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <TaskItem\n                                theme={theme}\n                                task={task}\n                                setTasks={setTasks}\n                                isNewTask={task.id === newTaskId}\n                                onSave={handleSaveNewTask}\n                                onCancel={handleCancelNewTask}\n                              />\n                            </div>\n                          )}\n                        </Draggable>\n                      ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n        </div>\n      </div>\n\n      <AIChatModal\n        show={showAIModal}\n        onClose={() => setShowAIModal(false)}\n        onTaskGenerated={handleAITaskGenerated}\n        theme={theme}\n      />\n    </>\n  );\n};\n\nexport default TaskList;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:5001/api\",\n  headers: { \"ngrok-skip-browser-warning\": \"true\" },\n  timeout: 30000,\n});\n\n// ✅ Attach JWT token automatically\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Standard error formatting\nconst formatError = (error) => {\n  if (error.response)\n    return {\n      status: error.response.status,\n      message: error.response.data.error,\n    };\n  if (error.request) return { status: 0, message: \"No response from server\" };\n  return { status: -1, message: error.message };\n};\n\n/* ======================\n   TASK ENDPOINTS\n====================== */\n\nexport const fetchTasks = () => api.get(\"/tasks\");\n\nexport const createTask = (task) =>\n  api.post(\"/tasks\", {\n    ...task,\n    deadlineUTC: task.deadlineUTC || null,\n  });\n\nexport const updateTask = (id, updated) =>\n  api.put(`/tasks/${id}`, {\n    ...updated,\n    deadlineUTC: updated.deadlineUTC ?? null,\n  });\n\nexport const deleteTask = (taskId) => api.delete(`/tasks/${taskId}`);\n\nexport const updateTaskPriority = (taskId, priority) =>\n  api.put(`/tasks/${taskId}/priority`, { priority });\n\n// ✅ Fully overwrite reminder set\nexport const updateTaskReminders = (taskId, reminders) =>\n  api.patch(`/tasks/${taskId}/reminders`, {\n    action: \"overwrite\",\n    reminders,\n  });\n\n/* ======================\n   AUTH ENDPOINTS\n====================== */\n\nexport const loginUser = (email, password) =>\n  api.post(\"/auth/login\", { email, password });\n\nexport const loginWithGoogle = (authorizationCode) =>\n  api.post(`/auth/google`, { code: authorizationCode });\n\nexport const registerUser = (firstName, lastName, email, password) =>\n  api.post(\"/auth/register\", { firstName, lastName, email, password });\n\nexport const verifyRegistrationCode = (email, verificationCode) =>\n  api.post(\"/auth/verify-registration\", { email, verificationCode });\n\nexport const sendVerificationCode = (email) =>\n  api.post(\"/auth/resend-verification\", { email });\n\nexport const sendForgotPasswordRequest = (email) =>\n  api.post(\"/auth/forgot-password\", { email });\n\nexport const resetPassword = (email, verificationCode, newPassword) =>\n  api.post(\"/auth/verify-code\", { email, verificationCode, newPassword });\n\nexport const changePassword = (currentPassword, newPassword) =>\n  api.post(\"/auth/change-password\", { currentPassword, newPassword });\n\nexport const verifyToken = () => api.get(\"/verify-token\");\n\n/* ======================\n PROFILE ENDPOINTS\n====================== */\n\nexport const getProfile = () => api.get(\"/profile\").then((res) => res.data);\n\nexport const updateProfile = (formData) =>\n  api\n    .put(\"/profile\", formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n    .then((res) => res.data);\n\n/* ======================\n AI ENDPOINTS\n====================== */\n\nexport const generateAITask = (prompt) =>\n  api.post(\"/ai/chat\", { prompt }).then((r) => ({\n    success: true,\n    data: r.data,\n  }));\n\nexport const sendAIChatMessage = (message, conversationHistory = []) =>\n  api.post(\"/ai/chat-conversation\", {\n    message,\n    conversationHistory,\n  });\n","// Format backend UTC → local datetime-local input\nexport const formatDateTimeLocal = (iso) => {\n  if (!iso) return \"\";\n  const d = new Date(iso);\n  const off = d.getTimezoneOffset() * 60000;\n  const local = new Date(d.getTime() - off);\n  return local.toISOString().slice(0, 16);\n};\n\n// Deadline and metadata formatting\nexport const formatRelativeTime = (iso) => {\n  if (!iso) return \"No date\";\n  const then = new Date(iso);\n  const now = new Date();\n  const diffMs = then - now;\n  const diffDays = diffMs / 86400000;\n\n  if (diffDays > 1) return `${Math.floor(diffDays)} days left`;\n  if (diffDays > 0) return \"Tomorrow\";\n  if (diffDays > -1) return \"Today\";\n  return `${Math.abs(Math.ceil(diffDays))} days ago`;\n};\n\nexport const convertDateToWords = (iso) => {\n  if (!iso) return \"\";\n  const date = new Date(iso);\n\n  return date.toLocaleString(\"en-US\", {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  });\n};\n"],"names":["_ref","theme","show","title","message","onConfirm","onCancel","_jsx","className","tabIndex","role","onClick","children","_jsxs","e","stopPropagation","type","concat","checked","onChange","label","target","isDaily","r","isWeekly","formatHoursLabel","h","Math","round","days","parseLocalHour","hh","split","min","max","parseInt","localHourToUTC","localHour","d","Date","setHours","getUTCHours","localWeeklyToUTC","localDay","now","diff","getDay","setDate","getDate","utcDay","getUTCDay","utcHour","utcWeeklyToLocal","UTC","getHours","DAY_LABELS","tempDeadline","tempReminders","setTempReminders","ALL_INTERVALS","deadline","diffHrs","maxDays","floor","maxWeeks","dailyObj","useMemo","find","weeklyObj","hasDaily","hasWeekly","dailyTime","setDailyTime","useState","hourOfDayUTC","String","padStart","utcHourToLocalHH","weeklyDay","setWeeklyDay","dayOfWeek","weeklyTime","setWeeklyTime","toggleOneTime","val","prev","filter","abs","remindBefore","some","sent","custom","setCustom","defaultIntervals","i","value","customIntervals","ai","map","customDate","toLocaleString","open","setOpen","formatDateTimeLocal","toISOString","undefined","addCustom","hours","toggleDaily","filtered","hrLocal","step","disabled","v","_objectSpread","onDailyTime","toggleWeekly","Number","updateWeeklyDay","updateWeeklyTime","length","ReminderCheckbox","normalizeStatusForBackend","task","setTasks","isNewTask","onSave","isEditing","setIsEditing","isLoading","setIsLoading","showDeleteModal","setShowDeleteModal","tempTitle","setTempTitle","tempDescription","setTempDescription","description","tempStatus","setTempStatus","status","setTempDeadline","deadlineUTC","Array","isArray","reminders","cardRef","useRef","handleCancel","useCallback","id","useEffect","handler","current","contains","document","addEventListener","removeEventListener","stripColor","isDeadlineValid","reminderSummary","getReminderSummary","daily","weekly","once","Boolean","join","handleSave","async","trim","deadlineISO","updatedFields","formattedReminders","toBackendReminders","uiReminders","result","forEach","push","triggerAtUTC","triggerMs","getTime","updated","updateTask","updateTaskReminders","finalTask","data","t","err","console","error","_Fragment","ref","style","backgroundColor","color","rows","TaskReminders","formatRelativeTime","createdAt","ConfirmationModal","deleteTask","p","onClose","onTaskGenerated","mode","setMode","quickPrompt","setQuickPrompt","chatMessages","setChatMessages","chatInput","setChatInput","setError","chatEndRef","inputRef","focus","_chatEndRef$current","scrollIntoView","behavior","handleQuickGenerate","generateAITask","success","aiTask","newTask","updatedAt","priority","handleChatSend","userMessage","content","timestamp","conversationHistory","msg","sendAIChatMessage","aiMessage","reply","handleKeyPress","key","shiftKey","preventDefault","onKeyDown","placeholder","index","toLocaleTimeString","hour","minute","resetChat","conversationSummary","contextualPrompt","normalizeStatusUI","backendStatus","convertBackendRemindersToUI","_task$reminders","converted","user","logout","useAuth","tasks","newTaskId","setNewTaskId","showAIModal","setShowAIModal","fetchTasks","then","res","mapped","catch","_err$response","response","handleSaveNewTask","_t$reminders","createTask","saved","x","handleCancelNewTask","tempId","handleAddTask","DragDropContext","onDragEnd","destination","source","_ref2","reordered","from","moved","splice","updateTaskPriority","Droppable","droppableId","provided","innerRef","droppableProps","sort","a","b","Draggable","draggableId","draggableProps","dragHandleProps","TaskItem","AIChatModal","api","axios","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject","get","post","_updated$deadlineUTC","put","taskId","delete","patch","action","loginUser","email","password","loginWithGoogle","authorizationCode","code","registerUser","firstName","lastName","verifyRegistrationCode","verificationCode","sendVerificationCode","sendForgotPasswordRequest","resetPassword","newPassword","changePassword","currentPassword","getProfile","updateProfile","formData","prompt","arguments","iso","off","getTimezoneOffset","slice","diffDays","ceil","convertDateToWords","day","month","year"],"sourceRoot":""}