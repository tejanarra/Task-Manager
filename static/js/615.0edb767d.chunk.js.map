{"version":3,"file":"static/js/615.0edb767d.chunk.js","mappings":"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","sources":["components/ConfirmationModal.js","components/TaskEditor.js","components/taskItem/ReminderCheckbox.js","components/taskItem/TaskReminders.js","services/api.js","utils/dateUtils.js"],"sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Styles/ConfirmationModal.css\";\n\nconst ConfirmationModal = ({\n  theme,\n  show,\n  title = \"Confirm Action\",\n  message = \"Are you sure you want to proceed?\",\n  onConfirm,\n  onCancel,\n}) => {\n  if (!show) return null;\n\n  return (\n    <div\n      className=\"custom-modal-overlay d-flex align-items-center justify-content-center\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      onClick={onCancel}\n    >\n      <div\n        className=\"custom-modal-content\"\n        role=\"document\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"custom-modal-header\">\n          <h5 className=\"modal2-title fw-bold\">{title}</h5>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            aria-label=\"Close\"\n            onClick={onCancel}\n          ></button>\n        </div>\n        <div className=\"custom-modal-body\">\n          <p className={`text-${theme === \"dark\" ? \"light\" : \"muted\"} mb-4`}>\n            {message}\n          </p>\n        </div>\n        <div className=\"custom-modal-footer d-flex justify-content-end gap-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={onCancel}\n          >\n            Cancel\n          </button>\n          <button type=\"button\" className=\"btn sign-in-btn\" onClick={onConfirm}>\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationModal;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  createTask,\n  updateTask,\n  deleteTask,\n  fetchTaskById,\n} from \"../services/api\";\nimport TaskReminders from \"./taskItem/TaskReminders\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport { formatDateTimeLocal } from \"../utils/dateUtils\";\nimport \"../Styles/TaskEditor.css\";\n\nconst ALL_INTERVALS = [\n  { value: 1, label: \"1 hr\" },\n  { value: 24, label: \"1 day\" },\n  { value: 168, label: \"1 week\" },\n];\n\nfunction formatHoursLabel(h) {\n  if (h < 1) return `${Math.round(h * 60)} min`;\n  if (Number.isInteger(h)) return `${h} hr${h > 1 ? \"s\" : \"\"}`;\n  return `${h} hrs`;\n}\n\nconst TaskEditor = ({ theme }) => {\n  const navigate = useNavigate();\n  const { taskId } = useParams();\n  const isNewTask = taskId === \"new\";\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"not-started\");\n  const [deadline, setDeadline] = useState(null);\n  const [reminders, setReminders] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load task data if editing\n  useEffect(() => {\n    const loadTask = async () => {\n      if (!isNewTask) {\n        try {\n          setIsLoading(true);\n          const response = await fetchTaskById(taskId);\n          const task = response.data;\n\n          if (task) {\n            setTitle(task.title);\n            setDescription(task.description);\n            setStatus(task.status);\n            setDeadline(task.deadline || null);\n            setReminders(Array.isArray(task.reminders) ? task.reminders : []);\n          } else {\n            setError(\"Task not found\");\n            setTimeout(() => navigate(\"/tasks\"), 2000);\n          }\n        } catch (err) {\n          console.error(\"Error loading task:\", err);\n          setError(\"Failed to load task\");\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n\n    loadTask();\n  }, [taskId, isNewTask, navigate]);\n\n  // Load task from navigation state (for AI-generated tasks)\n  useEffect(() => {\n    const state = window.history.state?.usr;\n    if (state?.task) {\n      const task = state.task;\n      setTitle(task.title || \"\");\n      setDescription(task.description || \"\");\n      setStatus(task.status || \"not-started\");\n      setDeadline(task.deadline || null);\n      setReminders(Array.isArray(task.reminders) ? task.reminders : []);\n    }\n  }, []);\n\n  const handleSave = async () => {\n    if (!title.trim() || !description.trim()) {\n      setError(\"Title and description are required\");\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    const now = new Date();\n    const deadlineDate = deadline ? new Date(deadline) : null;\n    const diffInHours =\n      deadlineDate && deadlineDate > now\n        ? (deadlineDate - now) / (1000 * 60 * 60)\n        : 0;\n\n    const regenerateRecurringReminders = (reminders) => {\n      const hasDaily = reminders.some((r) => r.type === \"daily\");\n      const hasWeekly = reminders.some((r) => r.type === \"weekly\");\n\n      let filteredReminders = reminders.filter(\n        (r) =>\n          (r.type === \"one-time\" || !r.type) && r.remindBefore <= diffInHours\n      );\n\n      if (hasDaily && diffInHours > 0) {\n        const maxDays = Math.floor(diffInHours / 24);\n        for (let day = 1; day <= maxDays; day++) {\n          filteredReminders.push({\n            remindBefore: day * 24,\n            sent: false,\n            type: \"daily\",\n            dayNumber: day,\n          });\n        }\n      }\n\n      if (hasWeekly && diffInHours > 0) {\n        const maxWeeks = Math.floor(diffInHours / (24 * 7));\n        for (let week = 1; week <= maxWeeks; week++) {\n          filteredReminders.push({\n            remindBefore: week * 24 * 7,\n            sent: false,\n            type: \"weekly\",\n            weekNumber: week,\n          });\n        }\n      }\n\n      return filteredReminders;\n    };\n\n    const finalReminders =\n      diffInHours > 0 ? regenerateRecurringReminders(reminders) : [];\n\n    const taskData = {\n      title: title.trim(),\n      description: description.trim(),\n      status,\n      deadline: deadline ? deadlineDate.toISOString() : null,\n      reminders: finalReminders,\n    };\n\n    try {\n      if (isNewTask) {\n        await createTask({ ...taskData, priority: 1 });\n      } else {\n        await updateTask(taskId, taskData);\n      }\n      navigate(\"/tasks\");\n    } catch (error) {\n      console.error(\"Error saving task:\", error);\n      setError(\"Failed to save task. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    setIsLoading(true);\n    try {\n      await deleteTask(taskId);\n      navigate(\"/tasks\");\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      setError(\"Failed to delete task\");\n      setIsLoading(false);\n      setShowDeleteModal(false);\n    }\n  };\n\n  const handleCancel = () => {\n    navigate(\"/tasks\");\n  };\n\n  const getStatusColor = () => {\n    switch (status) {\n      case \"completed\":\n        return \"#007a00\";\n      case \"in-progress\":\n        return \"#daa520\";\n      default:\n        return \"#a00000\";\n    }\n  };\n\n  const isDeadlineInFuture = deadline && new Date(deadline) > new Date();\n\n  if (isLoading && !isNewTask) {\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"task-editor-container\" style={{ position: 'relative' }}>\n          <div className=\"editor-spine\"></div>\n          <div className=\"loading-state\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <p>Loading task...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"container mt-5\">\n        <div\n          className={`task-editor-container ${theme === \"dark\" ? \"dark\" : \"\"}`}\n          style={{ position: 'relative' }}\n        >\n          <div className=\"editor-spine\" style={{ backgroundColor: getStatusColor() }}></div>\n          \n          <div className=\"editor-header\">\n            <button\n              className=\"back-button\"\n              onClick={handleCancel}\n              disabled={isLoading}\n              aria-label=\"Go back to tasks\"\n            >\n              <i className=\"bi bi-arrow-left\"></i>\n            </button>\n            <h2>{isNewTask ? \"Create New Task\" : \"Edit Task\"}</h2>\n            <i\n              className={`bi ${\n                status === \"completed\"\n                  ? \"bi-check-circle-fill\"\n                  : status === \"in-progress\"\n                  ? \"bi-hourglass-split\"\n                  : \"bi-circle\"\n              } status-icon-header`}\n              style={{ color: getStatusColor() }}\n            />\n          </div>\n\n          {error && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              <i className=\"bi bi-exclamation-triangle me-2\"></i>\n              {error}\n            </div>\n          )}\n\n          <div className=\"editor-form\">\n            <div className=\"form-group\">\n              <label className=\"form-label\">\n                <i className=\"bi bi-pencil-square me-1\"></i>\n                Title <span className=\"required\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                placeholder=\"Enter task title...\"\n                disabled={isLoading}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">\n                <i className=\"bi bi-text-paragraph me-1\"></i>\n                Description <span className=\"required\">*</span>\n              </label>\n              <textarea\n                className=\"form-control\"\n                rows={5}\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                placeholder=\"Enter task description...\"\n                disabled={isLoading}\n              />\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  <i className=\"bi bi-flag me-1\"></i>\n                  Status\n                </label>\n                <select\n                  className=\"form-select\"\n                  value={status}\n                  onChange={(e) => setStatus(e.target.value)}\n                  disabled={isLoading}\n                  style={{ color: getStatusColor() }}\n                >\n                  <option value=\"not-started\">Not Started</option>\n                  <option value=\"in-progress\">In Progress</option>\n                  <option value=\"completed\">Completed</option>\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">\n                  <i className=\"bi bi-calendar-event me-1\"></i>\n                  Deadline\n                </label>\n                <input\n                  type=\"datetime-local\"\n                  className=\"form-control\"\n                  value={deadline ? formatDateTimeLocal(deadline) : \"\"}\n                  onChange={(e) => setDeadline(e.target.value)}\n                  disabled={isLoading}\n                />\n              </div>\n            </div>\n\n            {isDeadlineInFuture && (\n              <div className=\"form-group reminders-section\">\n                <label className=\"form-label\">\n                  <i className=\"bi bi-clock-history me-1\"></i>\n                  Reminders\n                </label>\n                <TaskReminders\n                  tempDeadline={deadline}\n                  tempReminders={reminders}\n                  setTempReminders={setReminders}\n                  theme={theme}\n                  ALL_INTERVALS={ALL_INTERVALS}\n                  formatHoursLabel={formatHoursLabel}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"editor-actions\">\n            {!isNewTask && (\n              <button\n                className=\"btn btn-danger\"\n                onClick={() => setShowDeleteModal(true)}\n                disabled={isLoading}\n              >\n                <i className=\"bi bi-trash me-2\"></i>\n                Delete Task\n              </button>\n            )}\n            <div className=\"action-group\">\n              <button\n                className=\"btn btn-secondary\"\n                onClick={handleCancel}\n                disabled={isLoading}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"btn btn-primary\"\n                onClick={handleSave}\n                disabled={!title.trim() || !description.trim() || isLoading}\n              >\n                {isLoading ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\"></span>\n                    Saving...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"bi bi-check-lg me-2\"></i>\n                    {isNewTask ? \"Create Task\" : \"Save Changes\"}\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ConfirmationModal\n        theme={theme}\n        show={showDeleteModal}\n        title=\"Delete Task\"\n        message=\"Are you sure you want to delete this task? This action cannot be undone.\"\n        onConfirm={handleDelete}\n        onCancel={() => setShowDeleteModal(false)}\n      />\n    </>\n  );\n};\n\nexport default TaskEditor;","import \"./Styles/ReminderCheckbox.css\";\n\nconst ReminderCheckbox = ({\n  value,\n  label,\n  checked,\n  onChange,\n  className = \"\",\n  disabled = false,\n}) => (\n  <div className={`d-inline-block ${className}`}>\n    <label\n      className={`reminder-checkbox-label d-inline-flex align-items-center ${\n        disabled ? \"disabled\" : \"\"\n      }`}\n    >\n      <input\n        type=\"checkbox\"\n        className=\"form-check-input me-2\"\n        checked={checked}\n        onChange={(e) => !disabled && onChange(e.target.checked)}\n        disabled={disabled}\n        aria-label={`Set reminder for ${label}`}\n        aria-describedby={`reminder-${value}-desc`}\n      />\n      <span id={`reminder-${value}-desc`}>{label}</span>\n    </label>\n  </div>\n);\n\nexport default ReminderCheckbox;\n","import React, { useState } from \"react\";\nimport ReminderCheckbox from \"./ReminderCheckbox\";\nimport { formatDateTimeLocal } from \"../../utils/dateUtils\";\nimport \"./Styles/TaskReminders.css\";\n\nexport const formatHoursLabel = (h) => {\n  if (h < 1) return `${Math.round(h * 60)} min`;\n  if (h < 24)\n    return `${h % 1 === 0 ? h : h.toFixed(1)} hr${h !== 1 ? \"s\" : \"\"}`;\n  const days = h / 24;\n  if (days < 7)\n    return `${days % 1 === 0 ? days : days.toFixed(1)} day${\n      days !== 1 ? \"s\" : \"\"\n    }`;\n  const weeks = days / 7;\n  return `${weeks % 1 === 0 ? weeks : weeks.toFixed(1)} week${\n    weeks !== 1 ? \"s\" : \"\"\n  }`;\n};\n\nconst TaskReminders = ({\n  tempDeadline,\n  tempReminders,\n  setTempReminders,\n  theme,\n  ALL_INTERVALS,\n}) => {\n  const [customReminder, setCustomReminder] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const now = new Date();\n  const deadlineDate = tempDeadline ? new Date(tempDeadline) : null;\n  const diffInHours =\n    deadlineDate && deadlineDate > now\n      ? (deadlineDate - now) / (1000 * 60 * 60)\n      : 0;\n\n  // Helper to check if reminder is one-time (not daily/weekly)\n  const isOneTimeReminder = (r) => {\n    return !r.type || r.type === \"one-time\";\n  };\n\n  // Check if daily reminders are active\n  const hasDailyReminders = tempReminders.some((r) => r.type === \"daily\");\n\n  // Check if weekly reminders are active\n  const hasWeeklyReminders = tempReminders.some((r) => r.type === \"weekly\");\n\n  // Toggle daily reminders\n  const toggleDailyReminders = (checked) => {\n    setTempReminders((prev) => {\n      if (checked) {\n        // Remove existing daily reminders and add a single daily reminder template\n        const withoutDaily = prev.filter((r) => r.type !== \"daily\");\n        return [\n          ...withoutDaily,\n          { remindBefore: 24, sent: false, type: \"daily\" },\n        ];\n      } else {\n        // Remove all daily reminders\n        return prev.filter((r) => r.type !== \"daily\");\n      }\n    });\n  };\n\n  // Toggle weekly reminders\n  const toggleWeeklyReminders = (checked) => {\n    setTempReminders((prev) => {\n      if (checked) {\n        // Remove existing weekly reminders and add a single weekly reminder template\n        const withoutWeekly = prev.filter((r) => r.type !== \"weekly\");\n        return [\n          ...withoutWeekly,\n          { remindBefore: 168, sent: false, type: \"weekly\" },\n        ];\n      } else {\n        // Remove all weekly reminders\n        return prev.filter((r) => r.type !== \"weekly\");\n      }\n    });\n  };\n\n  // Default intervals (e.g. 1 hr, 1 day, 1 week) - these are one-time reminders\n  const defaultIntervals = ALL_INTERVALS.filter((i) => i.value <= diffInHours);\n\n  // Custom reminders - one-time reminders that don't match default intervals\n  const customIntervals = tempReminders\n    .filter((r) => {\n      if (!isOneTimeReminder(r)) return false;\n      if (r.remindBefore > diffInHours) return false;\n\n      // Check if this matches any default interval\n      const matchesDefault = ALL_INTERVALS.some(\n        (ai) => Math.abs(ai.value - r.remindBefore) < 0.01\n      );\n\n      return !matchesDefault;\n    })\n    .map((r) => {\n      // If has customDate, show formatted date\n      if (r.customDate) {\n        try {\n          const date = new Date(r.customDate);\n          return {\n            value: r.remindBefore,\n            label: date.toLocaleString(),\n            customDate: r.customDate,\n          };\n        } catch (err) {\n          console.warn(\"Error formatting customDate:\", err);\n        }\n      }\n\n      // Otherwise calculate date from remindBefore\n      if (deadlineDate) {\n        const reminderDate = new Date(\n          deadlineDate.getTime() - r.remindBefore * 3600000\n        );\n        return {\n          value: r.remindBefore,\n          label: reminderDate.toLocaleString(),\n        };\n      }\n\n      // Fallback to hours label\n      return {\n        value: r.remindBefore,\n        label: formatHoursLabel(r.remindBefore),\n      };\n    });\n\n  // Toggle reminder\n  const toggleReminder = (value, checked) => {\n    setTempReminders((prev) => {\n      if (checked) {\n        // Check if already exists\n        const existing = prev.find(\n          (r) => isOneTimeReminder(r) && Math.abs(r.remindBefore - value) < 0.01\n        );\n\n        if (!existing) {\n          return [\n            ...prev,\n            { remindBefore: value, sent: false, type: \"one-time\" },\n          ];\n        }\n        return prev;\n      } else {\n        // Remove the reminder\n        return prev.filter(\n          (r) =>\n            !isOneTimeReminder(r) || Math.abs(r.remindBefore - value) >= 0.01\n        );\n      }\n    });\n  };\n\n  // Add custom reminder\n  const handleAddCustomReminder = () => {\n    if (!customReminder) return;\n\n    const selectedDate = new Date(customReminder);\n    if (isNaN(selectedDate.getTime())) {\n      console.warn(\"Invalid date selected\");\n      return;\n    }\n\n    if (!deadlineDate || selectedDate >= deadlineDate) {\n      console.warn(\"Custom reminder must be before deadline\");\n      return;\n    }\n\n    if (selectedDate <= now) {\n      console.warn(\"Custom reminder must be in the future\");\n      return;\n    }\n\n    const hours = (deadlineDate - selectedDate) / (1000 * 60 * 60);\n\n    if (hours > 0 && hours <= diffInHours) {\n      setTempReminders((prev) => {\n        // Check if similar reminder already exists\n        const exists = prev.some(\n          (r) => isOneTimeReminder(r) && Math.abs(r.remindBefore - hours) < 0.01\n        );\n\n        if (!exists) {\n          return [\n            ...prev,\n            {\n              remindBefore: hours,\n              sent: false,\n              type: \"one-time\",\n              customDate: selectedDate.toISOString(),\n            },\n          ];\n        }\n        return prev;\n      });\n      setCustomReminder(\"\");\n    }\n  };\n\n  // Calculate how many days/weeks until deadline\n  const maxDays = Math.floor(diffInHours / 24);\n  const maxWeeks = Math.floor(diffInHours / (24 * 7));\n\n  return (\n    <div className=\"task-reminders-container\">\n      {/* Dropdown Header Bar */}\n      <div className=\"reminders-dropdown\" onClick={() => setIsOpen(!isOpen)}>\n        <div className=\"reminders-dropdown-header\">\n          <h6>\n            <i className=\"bi bi-clock\"></i> Reminders\n            {tempReminders.length > 0 && (\n              <span className=\"reminder-count-badge\">\n                {tempReminders.length}\n              </span>\n            )}\n          </h6>\n          {isOpen ? (\n            <i className=\"bi bi-chevron-up\"></i>\n          ) : (\n            <i className=\"bi bi-chevron-down\"></i>\n          )}\n        </div>\n      </div>\n\n      {/* Collapsible Content */}\n      {isOpen && (\n        <div className=\"reminders-dropdown-content\">\n          {/* Recurring Reminders Section */}\n          {(maxDays > 0 || maxWeeks > 0) && (\n            <div className=\"recurring-reminders-section\">\n              <label className=\"reminder-section-label\">\n                <i className=\"bi bi-arrow-repeat\"></i> Recurring Reminders:\n              </label>\n              <div className=\"recurring-options\">\n                {maxDays > 0 && (\n                  <div className=\"recurring-option\">\n                    <input\n                      type=\"checkbox\"\n                      checked={hasDailyReminders}\n                      onChange={(e) => toggleDailyReminders(e.target.checked)}\n                      id=\"daily-reminders\"\n                    />\n                    <label htmlFor=\"daily-reminders\">\n                      Every Day (up to {maxDays} reminder\n                      {maxDays !== 1 ? \"s\" : \"\"})\n                    </label>\n                  </div>\n                )}\n                {maxWeeks > 0 && (\n                  <div className=\"recurring-option\">\n                    <input\n                      type=\"checkbox\"\n                      checked={hasWeeklyReminders}\n                      onChange={(e) => toggleWeeklyReminders(e.target.checked)}\n                      id=\"weekly-reminders\"\n                    />\n                    <label htmlFor=\"weekly-reminders\">\n                      Every Week (up to {maxWeeks} reminder\n                      {maxWeeks !== 1 ? \"s\" : \"\"})\n                    </label>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* One-time Reminders Section */}\n          {defaultIntervals.length > 0 && (\n            <div className=\"reminder-section\">\n              <label className=\"reminder-section-label\">\n                <i className=\"bi bi-bell\"></i> One-time Reminders:\n              </label>\n              <div className=\"reminder-grid\">\n                {defaultIntervals.map((item) => {\n                  const existing = tempReminders.find(\n                    (r) =>\n                      isOneTimeReminder(r) &&\n                      Math.abs(r.remindBefore - item.value) < 0.01\n                  );\n                  const checked = !!existing;\n                  return (\n                    <ReminderCheckbox\n                      key={item.value}\n                      value={item.value}\n                      label={item.label}\n                      checked={checked}\n                      onChange={(checked) =>\n                        toggleReminder(item.value, checked)\n                      }\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          )}\n\n          {/* Custom Reminder Section */}\n          <div className=\"custom-reminder-section\">\n            <label className=\"reminder-section-label\">\n              <i className=\"bi bi-calendar-plus\"></i> Add Custom Reminder:\n            </label>\n            <div className=\"custom-reminder-input-group\">\n              <input\n                type=\"datetime-local\"\n                value={customReminder}\n                onChange={(e) => setCustomReminder(e.target.value)}\n                min={formatDateTimeLocal(now.toISOString())}\n                max={\n                  tempDeadline ? formatDateTimeLocal(tempDeadline) : undefined\n                }\n              />\n              <button\n                className={`btn btn-sm ${\n                  theme === \"dark\" ? \"btn-outline-light\" : \"btn-outline-dark\"\n                }`}\n                onClick={handleAddCustomReminder}\n                disabled={!customReminder}\n              >\n                <i className=\"bi bi-plus-lg\"></i> Add\n              </button>\n            </div>\n          </div>\n\n          {/* Custom One-time Reminders Section */}\n          {customIntervals.length > 0 && (\n            <div className=\"reminder-section\">\n              <label className=\"reminder-section-label\">\n                <i className=\"bi bi-calendar-check\"></i> Custom One-time\n                Reminders:\n              </label>\n              <div className=\"reminder-grid\">\n                {customIntervals.map((item, index) => {\n                  const existing = tempReminders.find(\n                    (r) =>\n                      isOneTimeReminder(r) &&\n                      Math.abs(r.remindBefore - item.value) < 0.01\n                  );\n                  const checked = !!existing;\n                  return (\n                    <ReminderCheckbox\n                      key={item.customDate || `${item.value}-${index}`}\n                      value={item.value}\n                      label={item.label}\n                      checked={checked}\n                      onChange={(checked) =>\n                        toggleReminder(item.value, checked)\n                      }\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          )}\n\n          {/* Active reminders summary */}\n          {tempReminders.length > 0 && (\n            <div className=\"active-reminders-summary\">\n              <small>\n                <i className=\"bi bi-info-circle\"></i> <strong>Active:</strong>\n                {hasDailyReminders && \" Daily\"}\n                {hasDailyReminders && hasWeeklyReminders && \",\"}\n                {hasWeeklyReminders && \" Weekly\"}\n                {(hasDailyReminders || hasWeeklyReminders) &&\n                  tempReminders.filter(isOneTimeReminder).length > 0 &&\n                  \",\"}\n                {tempReminders.filter(isOneTimeReminder).length > 0 &&\n                  ` ${tempReminders.filter(isOneTimeReminder).length} one-time`}\n              </small>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskReminders;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  // baseURL: \"https://task-manager-sigma-ashen.vercel.app/api\", // Replace with your backend URL\n  baseURL: \"http://localhost:5001/api\", // Localhost for local development\n  headers: {\n    \"ngrok-skip-browser-warning\": \"true\",\n  },\n  timeout: 30000, // 30 second timeout\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Enhanced error handler\nconst handleApiError = (error) => {\n  if (error.response) {\n    // Server responded with error\n    return {\n      message: error.response.data?.error || \"An error occurred\",\n      status: error.response.status,\n    };\n  } else if (error.request) {\n    // Request made but no response\n    return {\n      message: \"No response from server. Please check your connection.\",\n      status: 0,\n    };\n  } else {\n    // Error setting up request\n    return {\n      message: error.message || \"An unexpected error occurred\",\n      status: -1,\n    };\n  }\n};\n\n// Task-related endpoints\nexport const fetchTasks = () => api.get(\"/tasks\");\nexport const fetchTaskById = (taskId) => api.get(`/tasks/${taskId}`);\nexport const createTask = (newTask) => api.post(\"/tasks\", newTask);\nexport const updateTask = (taskId, updatedTask) =>\n  api.put(`/tasks/${taskId}`, updatedTask);\nexport const deleteTask = (taskId) => api.delete(`/tasks/${taskId}`);\nexport const updateTaskPriority = (taskId, priority) =>\n  api.put(`/tasks/${taskId}/priority`, { priority });\n\n// Authentication-related endpoints\nexport const loginUser = (email, password) => {\n  return api.post(\"/auth/login\", { email, password });\n};\n\nexport const loginWithGoogle = async (authorizationCode) => {\n  return api.post(`/auth/google`, { code: authorizationCode });\n};\n\nexport const registerUser = (firstName, lastName, email, password) => {\n  return api.post(\"/auth/register\", { firstName, lastName, email, password });\n};\n\nexport const verifyRegistrationCode = (email, verificationCode) => {\n  return api.post(\"/auth/verify-registration\", { email, verificationCode });\n};\n\nexport const sendVerificationCode = (email) => {\n  return api.post(\"/auth/resend-verification\", { email });\n};\n\nexport const sendForgotPasswordRequest = (email) => {\n  return api.post(\"/auth/forgot-password\", { email });\n};\n\nexport const resetPassword = (email, verificationCode, newPassword) => {\n  return api.post(\"/auth/verify-code\", {\n    email,\n    verificationCode,\n    newPassword,\n  });\n};\n\nexport const changePassword = (currentPassword, newPassword) => {\n  return api.post(\"/auth/change-password\", { currentPassword, newPassword });\n};\n\nexport const verifyToken = () => api.get(\"/verify-token\");\n\n// Profile-related endpoints\nexport const getProfile = async () => {\n  try {\n    const response = await api.get(\"/profile\");\n    return response.data;\n  } catch (err) {\n    console.error(\"Error fetching profile:\", err);\n    throw err;\n  }\n};\n\nexport const updateProfile = async (formData) => {\n  try {\n    const response = await api.put(\"/profile\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    return response.data;\n  } catch (err) {\n    console.error(\"Error updating profile:\", err);\n    throw err;\n  }\n};\n\n// AI-related endpoints\nexport const generateAITask = async (prompt) => {\n  try {\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    const response = await api.post(\n      \"/ai/chat\",\n      { prompt },\n      { headers: { \"x-user-timezone\": timezone } }\n    );\n    return { success: true, data: response.data };\n  } catch (error) {\n    const errorInfo = handleApiError(error);\n    return { success: false, error: errorInfo.message };\n  }\n};\n\nexport const sendAIChatMessage = async (message, conversationHistory = []) => {\n  try {\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    const response = await api.post(\n      \"/ai/chat-conversation\",\n      { message, conversationHistory },\n      { headers: { \"x-user-timezone\": timezone } }\n    );\n    return { success: true, data: response.data };\n  } catch (error) {\n    const errorInfo = handleApiError(error);\n    return { success: false, error: errorInfo.message };\n  }\n};\n\nexport default api;\n","import { format } from \"date-fns\";\n\nexport const formatRelativeTime = (dateString) => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - date) / 1000);\n  const justNowThreshold = 60;\n  if (diffInSeconds < 0) {\n    const futureDiff = Math.abs(diffInSeconds);\n    if (futureDiff < justNowThreshold) return \"Just now\";\n    if (futureDiff < 60) return `in ${futureDiff} second${futureDiff !== 1 ? \"s\" : \"\"}`;\n    if (futureDiff < 3600) return `in ${Math.ceil(futureDiff / 60)} minute${Math.ceil(futureDiff / 60) !== 1 ? \"s\" : \"\"}`;\n    if (futureDiff < 86400) return `in ${Math.ceil(futureDiff / 3600)} hour${Math.ceil(futureDiff / 3600) !== 1 ? \"s\" : \"\"}`;\n    if (futureDiff < 604800) return `in ${Math.ceil(futureDiff / 86400)} day${Math.ceil(futureDiff / 86400) !== 1 ? \"s\" : \"\"}`;\n    return format(date, \"MMM dd, yyyy\");\n  } else {\n    if (diffInSeconds < justNowThreshold) return \"Just now\";\n    if (diffInSeconds < 60) return `${diffInSeconds} second${diffInSeconds !== 1 ? \"s\" : \"\"} ago`;\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minute${Math.floor(diffInSeconds / 60) !== 1 ? \"s\" : \"\"} ago`;\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hour${Math.floor(diffInSeconds / 3600) !== 1 ? \"s\" : \"\"} ago`;\n    if (diffInSeconds < 604800) {\n      const days = Math.floor(diffInSeconds / 86400);\n      return days === 1 ? \"Yesterday\" : `${days} days ago`;\n    }\n    return format(date, \"MMM dd, yyyy\");\n  }\n};\n\nexport const convertDateToWords = (dateString) => {\n  const [year, month, day] = dateString.split('-').map(Number);\n  const date = new Date(year, month - 1, day);\n  if (isNaN(date)) return \"Invalid Date\";\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n  return date.toLocaleString(\"en-US\", options);\n};\n\nexport const formatDateTimeLocal = (dateString) => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n  return `${year}-${month}-${day}T${hours}:${minutes}`;\n};"],"names":["_ref","theme","show","title","message","onConfirm","onCancel","_jsx","className","tabIndex","role","onClick","children","_jsxs","e","stopPropagation","type","concat","ALL_INTERVALS","value","label","formatHoursLabel","h","Math","round","Number","isInteger","navigate","useNavigate","taskId","useParams","isNewTask","setTitle","useState","description","setDescription","status","setStatus","deadline","setDeadline","reminders","setReminders","isLoading","setIsLoading","showDeleteModal","setShowDeleteModal","error","setError","useEffect","async","task","fetchTaskById","data","Array","isArray","setTimeout","err","console","loadTask","_window$history$state","state","window","history","usr","handleCancel","getStatusColor","isDeadlineInFuture","Date","style","position","_Fragment","backgroundColor","disabled","color","onChange","target","placeholder","rows","formatDateTimeLocal","TaskReminders","tempDeadline","tempReminders","setTempReminders","trim","now","deadlineDate","diffInHours","finalReminders","hasDaily","some","r","hasWeekly","filteredReminders","filter","remindBefore","maxDays","floor","day","push","sent","dayNumber","maxWeeks","week","weekNumber","regenerateRecurringReminders","taskData","toISOString","createTask","_objectSpread","priority","updateTask","ConfirmationModal","deleteTask","checked","id","toFixed","days","weeks","customReminder","setCustomReminder","isOpen","setIsOpen","isOneTimeReminder","hasDailyReminders","hasWeeklyReminders","defaultIntervals","i","customIntervals","ai","abs","map","customDate","date","toLocaleString","warn","reminderDate","getTime","toggleReminder","prev","find","length","toggleDailyReminders","htmlFor","toggleWeeklyReminders","item","ReminderCheckbox","min","max","undefined","handleAddCustomReminder","selectedDate","isNaN","hours","index","api","axios","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject","handleApiError","_error$response$data","response","fetchTasks","get","newTask","post","updatedTask","put","delete","updateTaskPriority","loginUser","email","password","loginWithGoogle","code","authorizationCode","registerUser","firstName","lastName","verifyRegistrationCode","verificationCode","sendVerificationCode","sendForgotPasswordRequest","resetPassword","newPassword","changePassword","currentPassword","getProfile","updateProfile","formData","generateAITask","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","success","prompt","sendAIChatMessage","conversationHistory","arguments","formatRelativeTime","dateString","diffInSeconds","futureDiff","ceil","format","convertDateToWords","year","month","split","getFullYear","String","getMonth","padStart","getDate","getHours","minutes","getMinutes"],"sourceRoot":""}