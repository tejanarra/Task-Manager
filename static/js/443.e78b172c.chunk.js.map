{"version":3,"file":"static/js/443.e78b172c.chunk.js","mappings":"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","sources":["components/ConfirmationModal.js","components/ProfileOverview.js","services/api.js","utils/dateUtils.js"],"sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Styles/ConfirmationModal.css\";\n\nconst ConfirmationModal = ({\n  theme,\n  show,\n  title = \"Confirm Action\",\n  message = \"Are you sure you want to proceed?\",\n  onConfirm,\n  onCancel,\n}) => {\n  if (!show) return null;\n\n  return (\n    <div\n      className=\"custom-modal-overlay d-flex align-items-center justify-content-center\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      onClick={onCancel}\n    >\n      <div\n        className=\"custom-modal-content\"\n        role=\"document\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"custom-modal-header\">\n          <h5 className=\"modal2-title fw-bold\">{title}</h5>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            aria-label=\"Close\"\n            onClick={onCancel}\n          ></button>\n        </div>\n        <div className=\"custom-modal-body\">\n          <p className={`text-${theme === \"dark\" ? \"light\" : \"muted\"} mb-4`}>\n            {message}\n          </p>\n        </div>\n        <div className=\"custom-modal-footer d-flex justify-content-end gap-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={onCancel}\n          >\n            Cancel\n          </button>\n          <button type=\"button\" className=\"btn sign-in-btn\" onClick={onConfirm}>\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationModal;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getProfile } from \"../services/api\";\nimport \"../Styles/ProfileOverview.css\";\nimport { useAuth } from \"../context/AuthContext\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport { convertDateToWords } from \"../utils/dateUtils\";\n\nconst ProfileOverview = ({ theme }) => {\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\n  const { logout } = useAuth();\n  const [profile, setProfile] = useState(null);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    logout();\n    setShowLogoutModal(false);\n    navigate(\"/login\");\n  };\n\n  const logoutClicked = () => {\n    setShowLogoutModal(true);\n  };\n\n  function arrayBufferToBase64(buffer) {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\n    return window.btoa(binary);\n  }\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const data = await getProfile();\n        if (data.avatar && data.avatar.data) {\n          const base64Avatar = arrayBufferToBase64(data.avatar.data);\n          data.avatar = `data:image/jpeg;base64,${base64Avatar}`;\n        }\n        setProfile(data);\n      } catch (err) {\n        setError(\"Failed to fetch profile data.\");\n        if (err && err.status === 403) {\n          logout();\n          navigate(\"/login\");\n        }\n        console.log(err);\n      }\n    };\n\n    fetchProfile();\n  }, [logout, navigate]);\n\n  const renderSkeletonLoader = () => (\n    <div className=\"profile-container\">\n      <div className=\"profile-card shadow rounded\">\n        <h2 className=\"profile-title text-center mb-4\">Profile Overview</h2>\n        <div className=\"skeleton-loader\">\n          <div className=\"skeleton-avatar mb-4\"></div>\n          <div className=\"skeleton-line mb-3\"></div>\n          <div className=\"skeleton-line mb-3\"></div>\n          <hr />\n          <div className=\"skeleton-detail-row mb-3\"></div>\n          <div className=\"skeleton-detail-row mb-3\"></div>\n          <div className=\"skeleton-detail-row\"></div>\n          <div className=\"row mt-4\">\n            <div className=\"col-12 col-md-6 mb-2 mb-md-0\">\n              <div className=\"skeleton-button\"></div>\n            </div>\n            <div className=\"col-12 col-md-6\">\n              <div className=\"skeleton-button\"></div>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col-12\">\n              <div className=\"skeleton-button-lg\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (error) {\n    return (\n      <div className=\"profile-container\">\n        <h2 className=\"profile-title\">Profile Overview</h2>\n        <p className=\"text-danger text-center\">{error}</p>\n      </div>\n    );\n  }\n\n  if (!profile) {\n    return renderSkeletonLoader();\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-card shadow rounded\">\n        <h2 className=\"profile-title text-center mb-4\">Profile Overview</h2>\n        <div className=\"text-center\">\n          {profile.avatar ? (\n            <img\n              src={profile.avatar}\n              alt=\"Profile\"\n              className=\"rounded-circle profile-image\"\n            />\n          ) : (\n            <div className=\"initials-circle\">\n              <span className=\"initials-text\">\n                {`${profile.firstName?.[0] || \"\"}${\n                  profile.lastName?.[0] || \"\"\n                }`.toUpperCase()}\n              </span>\n            </div>\n          )}\n          <h3 className=\"mt-3\">{`${profile.firstName} ${profile.lastName}`}</h3>\n          <p className={`text-${theme === \"dark\" ? \"light\" : \"muted\"} mb-4`}>\n            {profile.bio || \"No bio available\"}\n          </p>\n        </div>\n        <div className=\"profile-details mt-4\">\n          <div className=\"detail-row\">\n            <strong className=\"detail-label\">Email:</strong>\n            <span className=\"detail-value\">{profile.email}</span>\n          </div>\n          <div className=\"detail-row\">\n            <strong className=\"detail-label\">Phone:</strong>\n            <span className=\"detail-value\">\n              {profile.phoneNumber || \"Not provided\"}\n            </span>\n          </div>\n          <div className=\"detail-row\">\n            <strong className=\"detail-label\">Date of Birth:</strong>\n            <span className=\"detail-value\">\n              {profile.dob ? convertDateToWords(profile.dob) : \"Not provided\"}\n            </span>\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col-12 col-md-6 mb-2 mb-md-0\">\n            <button\n              className=\"btn btn-secondary w-100\"\n              onClick={() => navigate(\"/change-password\")}\n            >\n              Change Password\n            </button>\n          </div>\n          <div className=\"col-12 col-md-6\">\n            <button\n              className=\"btn sign-in-btn w-100\"\n              onClick={() => navigate(\"/edit-profile\")}\n            >\n              Edit Profile\n            </button>\n          </div>\n        </div>\n        <div className=\"row mt-2\">\n          <div className=\"col-12\">\n            <button\n              className=\"btn btn-danger w-100\"\n              onClick={() => {\n                logoutClicked();\n              }}\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n      <ConfirmationModal\n        theme={theme}\n        show={showLogoutModal}\n        title=\"Logout\"\n        message=\"Are you sure you want to log out?\"\n        onConfirm={handleLogout}\n        onCancel={() => setShowLogoutModal(false)}\n      />\n    </div>\n  );\n};\n\nexport default ProfileOverview;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:5001/api\",\n  headers: { \"ngrok-skip-browser-warning\": \"true\" },\n  timeout: 30000,\n});\n\n// ✅ Attach JWT token automatically\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Standard error formatting\nconst formatError = (error) => {\n  if (error.response)\n    return {\n      status: error.response.status,\n      message: error.response.data.error,\n    };\n  if (error.request) return { status: 0, message: \"No response from server\" };\n  return { status: -1, message: error.message };\n};\n\n/* ======================\n   TASK ENDPOINTS\n====================== */\n\nexport const fetchTasks = () => api.get(\"/tasks\");\n\nexport const createTask = (task) =>\n  api.post(\"/tasks\", {\n    ...task,\n    deadlineUTC: task.deadlineUTC || null,\n  });\n\nexport const updateTask = (id, updated) =>\n  api.put(`/tasks/${id}`, {\n    ...updated,\n    deadlineUTC: updated.deadlineUTC ?? null,\n  });\n\nexport const deleteTask = (taskId) => api.delete(`/tasks/${taskId}`);\n\nexport const updateTaskPriority = (taskId, priority) =>\n  api.put(`/tasks/${taskId}/priority`, { priority });\n\n// ✅ Fully overwrite reminder set\nexport const updateTaskReminders = (taskId, reminders) =>\n  api.patch(`/tasks/${taskId}/reminders`, {\n    action: \"overwrite\",\n    reminders,\n  });\n\n/* ======================\n   AUTH ENDPOINTS\n====================== */\n\nexport const loginUser = (email, password) =>\n  api.post(\"/auth/login\", { email, password });\n\nexport const loginWithGoogle = (authorizationCode) =>\n  api.post(`/auth/google`, { code: authorizationCode });\n\nexport const registerUser = (firstName, lastName, email, password) =>\n  api.post(\"/auth/register\", { firstName, lastName, email, password });\n\nexport const verifyRegistrationCode = (email, verificationCode) =>\n  api.post(\"/auth/verify-registration\", { email, verificationCode });\n\nexport const sendVerificationCode = (email) =>\n  api.post(\"/auth/resend-verification\", { email });\n\nexport const sendForgotPasswordRequest = (email) =>\n  api.post(\"/auth/forgot-password\", { email });\n\nexport const resetPassword = (email, verificationCode, newPassword) =>\n  api.post(\"/auth/verify-code\", { email, verificationCode, newPassword });\n\nexport const changePassword = (currentPassword, newPassword) =>\n  api.post(\"/auth/change-password\", { currentPassword, newPassword });\n\nexport const verifyToken = () => api.get(\"/verify-token\");\n\n/* ======================\n PROFILE ENDPOINTS\n====================== */\n\nexport const getProfile = () => api.get(\"/profile\").then((res) => res.data);\n\nexport const updateProfile = (formData) =>\n  api\n    .put(\"/profile\", formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n    .then((res) => res.data);\n\n/* ======================\n AI ENDPOINTS\n====================== */\n\nexport const generateAITask = (prompt) =>\n  api.post(\"/ai/chat\", { prompt }).then((r) => ({\n    success: true,\n    data: r.data,\n  }));\n\nexport const sendAIChatMessage = (message, conversationHistory = []) =>\n  api.post(\"/ai/chat-conversation\", {\n    message,\n    conversationHistory,\n  });\n","// Format backend UTC → local datetime-local input\nexport const formatDateTimeLocal = (iso) => {\n  if (!iso) return \"\";\n  const d = new Date(iso);\n  const off = d.getTimezoneOffset() * 60000;\n  const local = new Date(d.getTime() - off);\n  return local.toISOString().slice(0, 16);\n};\n\n// Deadline and metadata formatting\nexport const formatRelativeTime = (iso) => {\n  if (!iso) return \"No date\";\n  const then = new Date(iso);\n  const now = new Date();\n  const diffMs = then - now;\n  const diffDays = diffMs / 86400000;\n\n  if (diffDays > 1) return `${Math.floor(diffDays)} days left`;\n  if (diffDays > 0) return \"Tomorrow\";\n  if (diffDays > -1) return \"Today\";\n  return `${Math.abs(Math.ceil(diffDays))} days ago`;\n};\n\nexport const convertDateToWords = (iso) => {\n  if (!iso) return \"\";\n  const date = new Date(iso);\n\n  return date.toLocaleString(\"en-US\", {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  });\n};\n"],"names":["_ref","theme","show","title","message","onConfirm","onCancel","_jsx","className","tabIndex","role","onClick","children","_jsxs","e","stopPropagation","type","concat","_profile$firstName","_profile$lastName","showLogoutModal","setShowLogoutModal","useState","logout","useAuth","profile","setProfile","error","setError","navigate","useNavigate","useEffect","async","data","getProfile","avatar","base64Avatar","buffer","binary","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","arrayBufferToBase64","err","status","console","log","fetchProfile","src","alt","firstName","lastName","toUpperCase","bio","email","phoneNumber","dob","convertDateToWords","ConfirmationModal","handleLogout","api","axios","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject","fetchTasks","get","createTask","task","post","_objectSpread","deadlineUTC","updateTask","id","updated","_updated$deadlineUTC","put","deleteTask","taskId","delete","updateTaskPriority","priority","updateTaskReminders","reminders","patch","action","loginUser","password","loginWithGoogle","authorizationCode","code","registerUser","verifyRegistrationCode","verificationCode","sendVerificationCode","sendForgotPasswordRequest","resetPassword","newPassword","changePassword","currentPassword","then","res","updateProfile","formData","generateAITask","prompt","r","success","sendAIChatMessage","conversationHistory","arguments","length","undefined","formatDateTimeLocal","iso","d","Date","off","getTimezoneOffset","getTime","toISOString","formatRelativeTime","diffDays","Math","floor","abs","ceil","toLocaleString","day","month","year"],"sourceRoot":""}