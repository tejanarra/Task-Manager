{"version":3,"file":"static/js/31.96070596.chunk.js","mappings":"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","sources":["services/api.js","components/auth/ForgotPassword.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://task-manager-sigma-ashen.vercel.app/api\", // Replace with your backend URL\n  // baseURL: \"http://localhost:5001/api\", // Localhost for local development\n  headers: {\n    \"ngrok-skip-browser-warning\": \"true\",\n  },\n  timeout: 30000, // 30 second timeout\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Enhanced error handler\nconst handleApiError = (error) => {\n  if (error.response) {\n    // Server responded with error\n    return {\n      message: error.response.data?.error || \"An error occurred\",\n      status: error.response.status,\n    };\n  } else if (error.request) {\n    // Request made but no response\n    return {\n      message: \"No response from server. Please check your connection.\",\n      status: 0,\n    };\n  } else {\n    // Error setting up request\n    return {\n      message: error.message || \"An unexpected error occurred\",\n      status: -1,\n    };\n  }\n};\n\n// Task-related endpoints\nexport const fetchTasks = () => api.get(\"/tasks\");\nexport const fetchTaskById = (taskId) => api.get(`/tasks/${taskId}`);\nexport const createTask = (newTask) => api.post(\"/tasks\", newTask);\nexport const updateTask = (taskId, updatedTask) =>\n  api.put(`/tasks/${taskId}`, updatedTask);\nexport const deleteTask = (taskId) => api.delete(`/tasks/${taskId}`);\nexport const updateTaskPriority = (taskId, priority) =>\n  api.put(`/tasks/${taskId}/priority`, { priority });\n\n// Authentication-related endpoints\nexport const loginUser = (email, password) => {\n  return api.post(\"/auth/login\", { email, password });\n};\n\nexport const loginWithGoogle = async (authorizationCode) => {\n  return api.post(`/auth/google`, { code: authorizationCode });\n};\n\nexport const registerUser = (firstName, lastName, email, password) => {\n  return api.post(\"/auth/register\", { firstName, lastName, email, password });\n};\n\nexport const verifyRegistrationCode = (email, verificationCode) => {\n  return api.post(\"/auth/verify-registration\", { email, verificationCode });\n};\n\nexport const sendVerificationCode = (email) => {\n  return api.post(\"/auth/resend-verification\", { email });\n};\n\nexport const sendForgotPasswordRequest = (email) => {\n  return api.post(\"/auth/forgot-password\", { email });\n};\n\nexport const resetPassword = (email, verificationCode, newPassword) => {\n  return api.post(\"/auth/verify-code\", {\n    email,\n    verificationCode,\n    newPassword,\n  });\n};\n\nexport const changePassword = (currentPassword, newPassword) => {\n  return api.post(\"/auth/change-password\", { currentPassword, newPassword });\n};\n\nexport const verifyToken = () => api.get(\"/verify-token\");\n\n// Profile-related endpoints\nexport const getProfile = async () => {\n  try {\n    const response = await api.get(\"/profile\");\n    return response.data;\n  } catch (err) {\n    console.error(\"Error fetching profile:\", err);\n    throw err;\n  }\n};\n\nexport const updateProfile = async (formData) => {\n  try {\n    const response = await api.put(\"/profile\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    return response.data;\n  } catch (err) {\n    console.error(\"Error updating profile:\", err);\n    throw err;\n  }\n};\n\n// AI-related endpoints\nexport const generateAITask = async (prompt) => {\n  try {\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    const response = await api.post(\n      \"/ai/chat\",\n      { prompt },\n      { headers: { \"x-user-timezone\": timezone } }\n    );\n    return { success: true, data: response.data };\n  } catch (error) {\n    const errorInfo = handleApiError(error);\n    return { success: false, error: errorInfo.message };\n  }\n};\n\nexport const sendAIChatMessage = async (message, conversationHistory = []) => {\n  try {\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    const response = await api.post(\n      \"/ai/chat-conversation\",\n      { message, conversationHistory },\n      { headers: { \"x-user-timezone\": timezone } }\n    );\n    return { success: true, data: response.data };\n  } catch (error) {\n    const errorInfo = handleApiError(error);\n    return { success: false, error: errorInfo.message };\n  }\n};\n\nexport default api;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { sendForgotPasswordRequest, resetPassword } from \"../../services/api\";\nimport \"./ForgotPassword.css\";\n\nconst ForgotPassword = ({ theme }) => {\n  const [email, setEmail] = useState(\"\");\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [hasCode, setHasCode] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSendEmail = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setMessage(\"\");\n    setIsLoading(true);\n\n    try {\n      const response = await sendForgotPasswordRequest(email);\n      setMessage(\n        response.data.message ||\n          \"Please check your email for further instructions.\"\n      );\n      setIsEmailSent(true);\n    } catch (err) {\n      console.error(\"Error sending reset email:\", err);\n      setError(\n        err.response?.data?.message || \"Something went wrong. Please try again.\"\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setMessage(\"\");\n    setIsLoading(true);\n\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const response = await resetPassword(\n        email,\n        verificationCode,\n        newPassword\n      );\n      setMessage(response.data.message || \"Password reset successful!\");\n      setTimeout(() => {\n        navigate(\"/login\");\n      }, 2000);\n    } catch (err) {\n      console.error(\"Error resetting password:\", err);\n      setError(\n        err.response?.data?.message || \"Something went wrong. Please try again.\"\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"forgot-password-page d-flex align-items-center justify-content-center\">\n      <div className=\"forgot-password-form wider-form\">\n        <h1 className=\"fw-bold mb-2\">Forgot Password</h1>\n        <p className={`text-${theme === \"dark\" ? \"light\" : \"muted\"} mb-4`}>\n          {hasCode || isEmailSent\n            ? \"Enter your verification code and reset your password.\"\n            : \"Enter your email to receive a verification code.\"}\n        </p>\n\n        <form\n          onSubmit={\n            hasCode || isEmailSent ? handleResetPassword : handleSendEmail\n          }\n        >\n          <div className=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"hasCodeCheck\"\n              checked={hasCode}\n              onChange={() => {\n                setHasCode(!hasCode);\n                setError(\"\");\n                setMessage(\"\");\n              }}\n            />\n            <label className=\"form-check-label\" htmlFor=\"hasCodeCheck\">\n              I already have a verification code\n            </label>\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"email\"\n              className=\"form-control py-2\"\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              disabled={isEmailSent}\n            />\n          </div>\n\n          {(hasCode || isEmailSent) && (\n            <>\n              <div className=\"mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control py-2\"\n                  id=\"verificationCode\"\n                  placeholder=\"Enter verification code\"\n                  value={verificationCode}\n                  onChange={(e) => setVerificationCode(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control py-2\"\n                  id=\"newPassword\"\n                  placeholder=\"Enter new password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control py-2\"\n                  id=\"confirmNewPassword\"\n                  placeholder=\"Confirm new password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  required\n                />\n              </div>\n            </>\n          )}\n\n          {error && <div className=\"alert alert-danger\">{error}</div>}\n          {message && <div className=\"alert alert-success\">{message}</div>}\n\n          <div className=\"d-flex justify-content-between mt-4\">\n            <button\n              type=\"submit\"\n              className=\"btn forgot-btn\"\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <span\n                  className=\"spinner-border spinner-border-sm text-light\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n              ) : hasCode || isEmailSent ? (\n                \"Reset\"\n              ) : (\n                \"Send Code\"\n              )}\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-link back-to-login\"\n              onClick={() => navigate(\"/login\")}\n            >\n              Back to Login\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"names":["api","axios","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","handleApiError","_error$response$data","response","message","data","status","fetchTasks","get","fetchTaskById","taskId","createTask","newTask","post","updateTask","updatedTask","put","deleteTask","delete","updateTaskPriority","priority","loginUser","email","password","loginWithGoogle","async","code","authorizationCode","registerUser","firstName","lastName","verifyRegistrationCode","verificationCode","sendVerificationCode","sendForgotPasswordRequest","resetPassword","newPassword","changePassword","currentPassword","getProfile","err","console","updateProfile","formData","generateAITask","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","success","prompt","sendAIChatMessage","conversationHistory","arguments","length","undefined","_ref","theme","setEmail","useState","setVerificationCode","setNewPassword","confirmPassword","setConfirmPassword","setMessage","setError","isEmailSent","setIsEmailSent","hasCode","setHasCode","isLoading","setIsLoading","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","setTimeout","_err$response2","_err$response2$data","_err$response","_err$response$data","type","id","checked","onChange","htmlFor","placeholder","value","target","required","disabled","_Fragment","role","onClick"],"sourceRoot":""}