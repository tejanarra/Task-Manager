{"version":3,"file":"static/js/79.edca0b2e.chunk.js","mappings":"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","sources":["components/Login.js","services/api.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { loginUser, loginWithGoogle } from \"../services/api\";\nimport \"../Styles/Login.css\";\nimport { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\nimport googlelogo from \"../assets/google_logo.png\";\n\nconst Login = ({ theme }) => {\n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n\n    try {\n      const { data } = await loginUser(email, password);\n      const { token, userInfo } = data;\n      login(token, userInfo);\n      navigate(\"/tasks\");\n    } catch (err) {\n      console.error(\n        \"Login failed:\",\n        err.response?.data?.message || err.message\n      );\n      setError(\n        err.response?.data?.message || \"Login failed. Please try again.\"\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleLoginFlow = useGoogleLogin({\n    flow: \"auth-code\",\n    onSuccess: async (response) => {\n      setIsLoading(true);\n      try {\n        const { data } = await loginWithGoogle(response.code);\n        login(data.token, data.userInfo);\n        navigate(\"/tasks\");\n      } catch (err) {\n        setError(err.response?.data?.message || \"Google login failed\");\n        googleLogout();\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    onError: () => {\n      setError(\"Google login failed\");\n      setIsLoading(false);\n    },\n    scope: \"openid email profile\",\n  });\n\n  const handleForgotPassword = () => {\n    navigate(\"/forgot-password\");\n  };\n\n  return (\n    <div className=\"login-page d-flex align-items-center justify-content-center\">\n      <div className=\"login-form\">\n        <h1 className=\"fw-bold mb-2\">Welcome back</h1>\n        <p className={`text-${theme === \"dark\" ? \"light\" : \"muted\"} mb-4`}>\n          Please enter your details\n        </p>\n\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <input\n              type=\"email\"\n              className=\"form-control py-2\"\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"password\"\n              className=\"form-control py-2\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          <button type=\"submit\" className={`btn sign-in-btn w-100 mb-3`}>\n            {isLoading ? (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            ) : (\n              \"Login\"\n            )}\n          </button>\n        </form>\n\n        <div className=\"oauth-container mb-3\">\n          <button\n            className={`btn google-signin-btn w-100 mb-3 d-flex align-items-center justify-content-center gap-2 ${\n              theme === \"dark\" ? \"dark-theme\" : \"\"\n            }`}\n            onClick={handleGoogleLoginFlow}\n            disabled={isLoading}\n            type=\"button\"\n            useOneTap\n          >\n            <img\n              src={googlelogo}\n              alt=\"Google logo\"\n              style={{ width: \"24px\", height: \"24px\" }}\n            />\n            <span>Sign in with Google</span>\n          </button>\n        </div>\n\n        <div className=\"d-flex justify-content-between mt-3\">\n          <Link to=\"/register\" className=\"register-link\">\n            Register\n          </Link>\n          <button\n            className=\"btn btn-link forgot-password-link p-0\"\n            onClick={handleForgotPassword}\n          >\n            Forgot password?\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://task-manager-sigma-ashen.vercel.app/api\", // Replace with your backend URL\n  // baseURL: \"http://localhost:5001/api\", // Localhost for local development\n  headers: {\n    \"ngrok-skip-browser-warning\": \"true\",\n  },\n  timeout: 30000, // 30 second timeout\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Enhanced error handler\nconst handleApiError = (error) => {\n  if (error.response) {\n    // Server responded with error\n    return {\n      message: error.response.data?.error || \"An error occurred\",\n      status: error.response.status,\n    };\n  } else if (error.request) {\n    // Request made but no response\n    return {\n      message: \"No response from server. Please check your connection.\",\n      status: 0,\n    };\n  } else {\n    // Error setting up request\n    return {\n      message: error.message || \"An unexpected error occurred\",\n      status: -1,\n    };\n  }\n};\n\n// Task-related endpoints\nexport const fetchTasks = () => api.get(\"/tasks\");\nexport const createTask = (newTask) => api.post(\"/tasks\", newTask);\nexport const updateTask = (taskId, updatedTask) =>\n  api.put(`/tasks/${taskId}`, updatedTask);\nexport const deleteTask = (taskId) => api.delete(`/tasks/${taskId}`);\nexport const updateTaskPriority = (taskId, priority) =>\n  api.put(`/tasks/${taskId}/priority`, { priority });\n\n// Authentication-related endpoints\nexport const loginUser = (email, password) => {\n  return api.post(\"/auth/login\", { email, password });\n};\n\nexport const loginWithGoogle = async (authorizationCode) => {\n  return api.post(`/auth/google`, { code: authorizationCode });\n};\n\nexport const registerUser = (firstName, lastName, email, password) => {\n  return api.post(\"/auth/register\", { firstName, lastName, email, password });\n};\n\nexport const verifyRegistrationCode = (email, verificationCode) => {\n  return api.post(\"/auth/verify-registration\", { email, verificationCode });\n};\n\nexport const sendVerificationCode = (email) => {\n  return api.post(\"/auth/resend-verification\", { email });\n};\n\nexport const sendForgotPasswordRequest = (email) => {\n  return api.post(\"/auth/forgot-password\", { email });\n};\n\nexport const resetPassword = (email, verificationCode, newPassword) => {\n  return api.post(\"/auth/verify-code\", {\n    email,\n    verificationCode,\n    newPassword,\n  });\n};\n\nexport const changePassword = (currentPassword, newPassword) => {\n  return api.post(\"/auth/change-password\", { currentPassword, newPassword });\n};\n\nexport const verifyToken = () => api.get(\"/verify-token\");\n\n// Profile-related endpoints\nexport const getProfile = async () => {\n  try {\n    const response = await api.get(\"/profile\");\n    return response.data;\n  } catch (err) {\n    console.error(\"Error fetching profile:\", err);\n    throw err;\n  }\n};\n\nexport const updateProfile = async (formData) => {\n  try {\n    const response = await api.put(\"/profile\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    return response.data;\n  } catch (err) {\n    console.error(\"Error updating profile:\", err);\n    throw err;\n  }\n};\n\n// AI-related endpoints\nexport const generateAITask = async (prompt) => {\n  try {\n    const response = await api.post(\"/ai/chat\", { prompt });\n    return {\n      success: true,\n      data: response.data,\n    };\n  } catch (error) {\n    const errorInfo = handleApiError(error);\n    return {\n      success: false,\n      error: errorInfo.message,\n    };\n  }\n};\n\nexport const sendAIChatMessage = async (message, conversationHistory = []) => {\n  try {\n    const response = await api.post(\"/ai/chat-conversation\", {\n      message,\n      conversationHistory,\n    });\n    return {\n      success: true,\n      data: response.data,\n    };\n  } catch (error) {\n    const errorInfo = handleApiError(error);\n    return {\n      success: false,\n      error: errorInfo.message,\n    };\n  }\n};\n\nexport default api;\n"],"names":["_ref","theme","login","useAuth","navigate","useNavigate","email","setEmail","useState","password","setPassword","error","setError","isLoading","setIsLoading","handleGoogleLoginFlow","useGoogleLogin","flow","onSuccess","async","data","loginWithGoogle","response","code","token","userInfo","err","_err$response3","_err$response3$data","message","googleLogout","onError","scope","_jsx","className","children","_jsxs","concat","onSubmit","e","preventDefault","loginUser","_err$response","_err$response$data","_err$response2","_err$response2$data","console","type","id","placeholder","value","onChange","target","required","role","onClick","disabled","useOneTap","src","alt","style","width","height","Link","to","handleForgotPassword","api","axios","create","baseURL","headers","timeout","interceptors","request","use","config","localStorage","getItem","Authorization","Promise","reject","handleApiError","_error$response$data","status","fetchTasks","get","createTask","newTask","post","updateTask","taskId","updatedTask","put","deleteTask","delete","updateTaskPriority","priority","authorizationCode","registerUser","firstName","lastName","verifyRegistrationCode","verificationCode","sendVerificationCode","sendForgotPasswordRequest","resetPassword","newPassword","changePassword","currentPassword","getProfile","updateProfile","formData","generateAITask","success","prompt","sendAIChatMessage","conversationHistory","arguments","length","undefined"],"sourceRoot":""}