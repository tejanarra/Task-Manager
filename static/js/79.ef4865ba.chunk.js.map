{"version":3,"file":"static/js/79.ef4865ba.chunk.js","mappings":"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","sources":["components/Login.js","services/api.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { loginUser, loginWithGoogle } from \"../services/api\";\nimport \"../Styles/Login.css\";\nimport { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\nimport googlelogo from \"../assets/google_logo.png\";\n\nconst Login = ({ theme }) => {\n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n\n    try {\n      const { data } = await loginUser(email, password);\n      const { token, userInfo } = data;\n      login(token, userInfo);\n      navigate(\"/tasks\");\n    } catch (err) {\n      console.error(\n        \"Login failed:\",\n        err.response?.data?.message || err.message\n      );\n      setError(\n        err.response?.data?.message || \"Login failed. Please try again.\"\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleLoginFlow = useGoogleLogin({\n    flow: \"auth-code\",\n    onSuccess: async (response) => {\n      setIsLoading(true);\n      try {\n        const { data } = await loginWithGoogle(response.code);\n        login(data.token, data.userInfo);\n        navigate(\"/tasks\");\n      } catch (err) {\n        setError(err.response?.data?.message || \"Google login failed\");\n        googleLogout();\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    onError: () => {\n      setError(\"Google login failed\");\n      setIsLoading(false);\n    },\n    scope: \"openid email profile\",\n  });\n\n  const handleForgotPassword = () => {\n    navigate(\"/forgot-password\");\n  };\n\n  return (\n    <div className=\"login-page d-flex align-items-center justify-content-center\">\n      <div className=\"login-form\">\n        <h1 className=\"fw-bold mb-2\">Welcome back</h1>\n        <p className={`text-${theme === \"dark\" ? \"light\" : \"muted\"} mb-4`}>\n          Please enter your details\n        </p>\n\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <input\n              type=\"email\"\n              className=\"form-control py-2\"\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <input\n              type=\"password\"\n              className=\"form-control py-2\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          <button type=\"submit\" className={`btn sign-in-btn w-100 mb-3`}>\n            {isLoading ? (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            ) : (\n              \"Login\"\n            )}\n          </button>\n        </form>\n\n        <div className=\"oauth-container mb-3\">\n          <button\n            className={`btn google-signin-btn w-100 mb-3 d-flex align-items-center justify-content-center gap-2 ${\n              theme === \"dark\" ? \"dark-theme\" : \"\"\n            }`}\n            onClick={handleGoogleLoginFlow}\n            disabled={isLoading}\n            type=\"button\"\n            useOneTap\n          >\n            <img\n              src={googlelogo}\n              alt=\"Google logo\"\n              style={{ width: \"24px\", height: \"24px\" }}\n            />\n            <span>Sign in with Google</span>\n          </button>\n        </div>\n\n        <div className=\"d-flex justify-content-between mt-3\">\n          <Link to=\"/register\" className=\"register-link\">\n            Register\n          </Link>\n          <button\n            className=\"btn btn-link forgot-password-link p-0\"\n            onClick={handleForgotPassword}\n          >\n            Forgot password?\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:5001/api\",\n  headers: { \"ngrok-skip-browser-warning\": \"true\" },\n  timeout: 30000,\n});\n\n// âœ… Attach JWT token automatically\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Standard error formatting\nconst formatError = (error) => {\n  if (error.response)\n    return {\n      status: error.response.status,\n      message: error.response.data.error,\n    };\n  if (error.request) return { status: 0, message: \"No response from server\" };\n  return { status: -1, message: error.message };\n};\n\n/* ======================\n   TASK ENDPOINTS\n====================== */\n\nexport const fetchTasks = () => api.get(\"/tasks\");\n\nexport const createTask = (task) =>\n  api.post(\"/tasks\", {\n    ...task,\n    deadlineUTC: task.deadlineUTC || null,\n  });\n\nexport const updateTask = (id, updated) =>\n  api.put(`/tasks/${id}`, {\n    ...updated,\n    deadlineUTC: updated.deadlineUTC ?? null,\n  });\n\nexport const deleteTask = (taskId) => api.delete(`/tasks/${taskId}`);\n\nexport const updateTaskPriority = (taskId, priority) =>\n  api.put(`/tasks/${taskId}/priority`, { priority });\n\n// âœ… Fully overwrite reminder set\nexport const updateTaskReminders = (taskId, reminders) =>\n  api.patch(`/tasks/${taskId}/reminders`, {\n    action: \"overwrite\",\n    reminders,\n  });\n\n/* ======================\n   AUTH ENDPOINTS\n====================== */\n\nexport const loginUser = (email, password) =>\n  api.post(\"/auth/login\", { email, password });\n\nexport const loginWithGoogle = (authorizationCode) =>\n  api.post(`/auth/google`, { code: authorizationCode });\n\nexport const registerUser = (firstName, lastName, email, password) =>\n  api.post(\"/auth/register\", { firstName, lastName, email, password });\n\nexport const verifyRegistrationCode = (email, verificationCode) =>\n  api.post(\"/auth/verify-registration\", { email, verificationCode });\n\nexport const sendVerificationCode = (email) =>\n  api.post(\"/auth/resend-verification\", { email });\n\nexport const sendForgotPasswordRequest = (email) =>\n  api.post(\"/auth/forgot-password\", { email });\n\nexport const resetPassword = (email, verificationCode, newPassword) =>\n  api.post(\"/auth/verify-code\", { email, verificationCode, newPassword });\n\nexport const changePassword = (currentPassword, newPassword) =>\n  api.post(\"/auth/change-password\", { currentPassword, newPassword });\n\nexport const verifyToken = () => api.get(\"/verify-token\");\n\n/* ======================\n PROFILE ENDPOINTS\n====================== */\n\nexport const getProfile = () => api.get(\"/profile\").then((res) => res.data);\n\nexport const updateProfile = (formData) =>\n  api\n    .put(\"/profile\", formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n    .then((res) => res.data);\n\n/* ======================\n AI ENDPOINTS\n====================== */\n\nexport const generateAITask = (prompt) =>\n  api.post(\"/ai/chat\", { prompt }).then((r) => ({\n    success: true,\n    data: r.data,\n  }));\n\nexport const sendAIChatMessage = (message, conversationHistory = []) =>\n  api.post(\"/ai/chat-conversation\", {\n    message,\n    conversationHistory,\n  });\n"],"names":["_ref","theme","login","useAuth","navigate","useNavigate","email","setEmail","useState","password","setPassword","error","setError","isLoading","setIsLoading","handleGoogleLoginFlow","useGoogleLogin","flow","onSuccess","async","data","loginWithGoogle","response","code","token","userInfo","err","_err$response3","_err$response3$data","message","googleLogout","onError","scope","_jsx","className","children","_jsxs","concat","onSubmit","e","preventDefault","loginUser","_err$response","_err$response$data","_err$response2","_err$response2$data","console","type","id","placeholder","value","onChange","target","required","role","onClick","disabled","useOneTap","src","alt","style","width","height","Link","to","handleForgotPassword","api","axios","create","baseURL","headers","timeout","interceptors","request","use","config","localStorage","getItem","Authorization","Promise","reject","fetchTasks","get","createTask","task","post","_objectSpread","deadlineUTC","updateTask","updated","_updated$deadlineUTC","put","deleteTask","taskId","delete","updateTaskPriority","priority","updateTaskReminders","reminders","patch","action","authorizationCode","registerUser","firstName","lastName","verifyRegistrationCode","verificationCode","sendVerificationCode","sendForgotPasswordRequest","resetPassword","newPassword","changePassword","currentPassword","getProfile","then","res","updateProfile","formData","generateAITask","prompt","r","success","sendAIChatMessage","conversationHistory","arguments","length","undefined"],"sourceRoot":""}