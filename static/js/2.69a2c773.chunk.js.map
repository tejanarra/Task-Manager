{"version":3,"file":"static/js/2.69a2c773.chunk.js","mappings":"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","sources":["components/landingPage/data.js","components/landingPage/FeaturesSection.js","components/landingPage/BenefitsSection.js","components/landingPage/TestimonialsSection.js","components/landingPage/DemoSection.js","components/landingPage/LandingPage.js","components/taskItem/TaskCard.js","utils/dateUtils.js"],"sourcesContent":["import feature1 from \"../../assets/organize.jpg\";\nimport feature2 from \"../../assets/reminder3.jpeg\";\nimport feature3 from \"../../assets/switch.jpg\";\nimport feature4 from \"../../assets/priority.jpg\";\nimport feature0 from \"../../assets/ai.jpg\"\n\nexport const featuresData = [\n  {\n    title: \"AI-Powered Task Assistant\",\n    description:\n      \"Experience the future of task management with our intelligent AI assistant. Simply chat naturally about your tasks, and our AI will understand your intent, create tasks with appropriate deadlines, update existing tasks, or delete completed ones—all through conversational interactions.\",\n    image: feature0,\n    icon: \"bi bi-robot\",\n    demoType: \"ai-chat\",\n    highlights: [\n      \"Natural language processing\",\n      \"Quick task generation\",\n      \"Conversational updates\",\n      \"Smart deadline suggestions\"\n    ]\n  },\n  {\n    title: \"Organize Your Tasks\",\n    description:\n      \"Create, manage, and prioritize your tasks effortlessly with drag-and-drop functionality. Our intuitive interface makes task organization a breeze, helping you focus on what matters most.\",\n    image: feature1,\n    icon: \"bi bi-list-check\",\n    demoType: \"task-list\",\n    alt: \"Organize Your Tasks\",\n  },\n  {\n    title: \"Smart Reminders\",\n    description:\n      \"Never miss a deadline with customizable reminders and notifications. Set multiple reminders per task with flexible timing options—from minutes to days before your deadline. Stay on track with smart alerts that help you manage your time effectively.\",\n    image: feature2,\n    icon: \"bi bi-bell\",\n    demoType: \"reminders\",\n    alt: \"Set Reminders\",\n  },\n  {\n    title: \"Dark and Light Modes\",\n    description:\n      \"Customize your viewing experience with both dark and light modes. Our seamless theme switching makes it easy on your eyes no matter the time of day or your personal preferences.\",\n    image: feature3,\n    icon: \"bi bi-moon-stars\",\n    demoType: \"theme\",\n    alt: \"Dark and Light Modes\",\n  },\n  {\n    title: \"Task Prioritization\",\n    description:\n      \"Easily prioritize your tasks with our drag-and-drop interface. Reorder tasks instantly to adjust priorities on the fly and focus on what's most important.\",\n    image: feature4,\n    icon: \"bi bi-arrows-move\",\n    demoType: \"priority\",\n    alt: \"Task Prioritization\",\n  },\n];\n\nexport const benefitsData = [\n  {\n    icon: \"bi bi-robot\",\n    title: \"AI-Powered Intelligence\",\n    description:\n      \"Leverage cutting-edge AI technology to manage tasks through natural conversation. Our intelligent assistant understands context and creates tasks the way you think.\",\n  },\n  {\n    icon: \"bi bi-speedometer2\",\n    title: \"Fast & Reliable\",\n    description:\n      \"Experience lightning-fast performance and reliable task management tools that keep you productive.\",\n  },\n  {\n    icon: \"bi bi-shield-lock\",\n    title: \"Secure\",\n    description:\n      \"Your data is protected with enterprise-grade security measures and encryption protocols.\",\n  },\n  {\n    icon: \"bi bi-phone\",\n    title: \"Mobile Friendly\",\n    description:\n      \"Access your tasks anywhere, anytime with our responsive WhatsApp-like mobile interface.\",\n  },\n  {\n    icon: \"bi bi-envelope\",\n    title: \"Email Notifications\",\n    description:\n      \"Stay informed with email notifications about task updates, deadlines, and reminders directly in your inbox.\",\n  },\n  {\n    icon: \"bi bi-person\",\n    title: \"Profile Customization\",\n    description:\n      \"Customize your profile settings, manage account details, and personalize your task management experience.\",\n  },\n  {\n    icon: \"bi bi-list-check\",\n    title: \"Task Prioritization\",\n    description:\n      \"Easily prioritize your tasks with our intuitive drag-and-drop interface. Arrange your tasks by priority to ensure you're always focusing on what matters most.\",\n  },\n  {\n    icon: \"bi bi-chat-dots\",\n    title: \"Conversational Updates\",\n    description:\n      \"Update, modify, or delete tasks through natural conversation. Our AI remembers context and handles complex task management scenarios effortlessly.\",\n  },\n];\n\nexport const testimonialsData = [\n  {\n    quote:\n      \"The AI assistant is a game-changer! I can just tell it what I need to do, and it creates perfectly structured tasks with reminders. It's like having a personal productivity coach.\",\n    author: \"Sarah Chen\",\n    role: \"Product Manager\"\n  },\n  {\n    quote:\n      \"I've tried many task managers, but this one truly stands out with its conversational AI. Managing tasks feels natural now—no more clicking through endless menus!\",\n    author: \"Michael Torres\",\n    role: \"Freelance Designer\"\n  },\n  {\n    quote:\n      \"The reminders feature combined with AI suggestions is fantastic! It ensures I never miss important deadlines and keeps my day perfectly organized.\",\n    author: \"Emily Rodriguez\",\n    role: \"Marketing Director\"\n  },\n  {\n    quote:\n      \"The WhatsApp-like AI interface makes task management feel effortless. I can update tasks on the go with just a quick message. Absolutely brilliant!\",\n    author: \"David Kim\",\n    role: \"Software Engineer\"\n  },\n];\n\n// Demo conversation data\nexport const demoConversation = [\n  {\n    role: \"user\",\n    content: \"I need to prepare for a client meeting next Tuesday at 2 PM\",\n    timestamp: new Date(Date.now() - 3600000).toISOString()\n  },\n  {\n    role: \"assistant\",\n    content: \"I'll create a task for your client meeting preparation. Would you like me to add reminders?\",\n    timestamp: new Date(Date.now() - 3500000).toISOString()\n  },\n  {\n    role: \"user\",\n    content: \"Yes, remind me 1 day before and 1 hour before\",\n    timestamp: new Date(Date.now() - 3400000).toISOString()\n  },\n  {\n    role: \"assistant\",\n    content: \"Perfect! I've created the task 'Prepare for client meeting' with deadline Tuesday 2:00 PM and reminders set for 1 day and 1 hour before. ✅\",\n    timestamp: new Date(Date.now() - 3300000).toISOString()\n  }\n];\n\n// demo data (data.js)\nexport const demoTasks = [\n  {\n    id: 1,\n    title: \"Prepare for client meeting\",\n    description: \"Review presentation slides and prepare talking points\",\n    status: \"not-started\",\n    createdAt: new Date(Date.now() - 86400000 * 2).toISOString(), // added\n    deadline: new Date(Date.now() + 86400000 * 5).toISOString(),\n    reminders: [\n      { time: 1440, unit: \"minutes\" },\n      { time: 60, unit: \"minutes\" }\n    ]\n  },\n  {\n    id: 2,\n    title: \"Submit quarterly report\",\n    description: \"Finalize Q4 financial report and submit to management\",\n    status: \"in-progress\",\n    createdAt: new Date(Date.now() - 86400000 * 3).toISOString(), // added\n    deadline: new Date(Date.now() + 86400000 * 3).toISOString(),\n    reminders: [{ time: 1, unit: \"days\" }]\n  },\n  {\n    id: 3,\n    title: \"Team standup meeting\",\n    description: \"Daily sync with development team\",\n    status: \"not-started\",\n    createdAt: new Date(Date.now() - 86400000).toISOString(), // added\n    deadline: new Date(Date.now() + 86400000).toISOString(),\n    reminders: [{ time: 30, unit: \"minutes\" }]\n  }\n];\n","import React from \"react\";\n\nconst FeaturesSection = ({ features, theme, featuresRef }) => (\n  <section className=\"lp-features\" id=\"features\" ref={featuresRef}>\n    <h1>Features</h1>\n    <div className=\"lp-features-container\">\n      {features.map((feature, index) => (\n        <div\n          key={feature.title}\n          className=\"lp-feature-item\"\n          style={{ flexDirection: index % 2 === 0 ? \"row\" : \"row-reverse\" }}\n        >\n          <div className=\"lp-feature-content\">\n            <h3>{feature.title}</h3>\n            <p>{feature.description}</p>\n          </div>\n          <div className=\"lp-feature-image\">\n            <a\n              href=\"http://www.freepik.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                style={{\n                  filter:\n                    theme === \"dark\" ? \"invert(1) grayscale(100%)\" : \"none\",\n                }}\n                src={feature.image}\n                alt={feature.alt}\n              />\n            </a>\n          </div>\n        </div>\n      ))}\n    </div>\n  </section>\n);\n\nexport default FeaturesSection;\n","import React from \"react\";\n\nconst BenefitsSection = ({ benefits }) => (\n  <section className=\"lp-benefits\">\n    <h2>Why Choose Us?</h2>\n    <div className=\"lp-benefits-container\">\n      {benefits.map(benefit => (\n        <div key={benefit.title} className=\"lp-benefit\">\n          <i className={benefit.icon}></i>\n          <h4>{benefit.title}</h4>\n          <p>{benefit.description}</p>\n        </div>\n      ))}\n    </div>\n  </section>\n);\n\nexport default BenefitsSection;","import React from \"react\";\n\nconst TestimonialsSection = ({ testimonials }) => (\n  <section className=\"lp-testimonials\">\n    <h2>What Our Users Say</h2>\n    <div className=\"lp-testimonials-container\">\n      {testimonials.map((testimonial, index) => (\n        <div key={index} className=\"lp-testimonial\">\n          {\" \"}\n          <p>\"{testimonial.quote}\"</p>\n        </div>\n      ))}\n    </div>\n  </section>\n);\n\nexport default TestimonialsSection;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { demoConversation, demoTasks } from \"./data\";\nimport TaskCard from \"../taskItem/TaskCard\"; // ✅ use your existing TaskCard\nimport \"./Styles/DemoSection.css\";\n\nconst DemoSection = ({ theme }) => {\n  const [activeDemo, setActiveDemo] = useState(\"chat\");\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\n  const chatEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n\n  // Reset chat when switching back\n  useEffect(() => {\n    if (activeDemo === \"chat\") {\n      setMessages([]);\n      setCurrentMessageIndex(0);\n      setIsTyping(false);\n    }\n  }, [activeDemo]);\n\n  // Message playback\n  useEffect(() => {\n    if (\n      activeDemo !== \"chat\" ||\n      currentMessageIndex >= demoConversation.length\n    ) {\n      return;\n    }\n\n    const message = demoConversation[currentMessageIndex];\n    const delay = currentMessageIndex === 0 ? 500 : 2000;\n\n    const timer = setTimeout(() => {\n      if (message.role === \"assistant\") {\n        setIsTyping(true);\n        setTimeout(() => {\n          setIsTyping(false);\n          setMessages((prev) => [...prev, message]);\n          setCurrentMessageIndex((prev) => prev + 1);\n        }, 1500);\n      } else {\n        setMessages((prev) => [...prev, message]);\n        setCurrentMessageIndex((prev) => prev + 1);\n      }\n    }, delay);\n\n    return () => clearTimeout(timer);\n  }, [activeDemo, currentMessageIndex]);\n\n  // Auto-scroll\n  useEffect(() => {\n    if (messages.length > 0 && messagesContainerRef.current) {\n      messagesContainerRef.current.scrollTo({\n        top: messagesContainerRef.current.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }, [messages.length, isTyping]);\n\n  const restartDemo = () => {\n    setMessages([]);\n    setCurrentMessageIndex(0);\n    setIsTyping(false);\n  };\n\n  const formatTime = (timestamp) =>\n    new Date(timestamp).toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n\n  return (\n    <section className=\"lp-demo\">\n      <div className=\"lp-demo-header\">\n        <h2>See It In Action</h2>\n        <p>Experience how our AI-powered task manager works</p>\n      </div>\n\n      <div className=\"lp-demo-tabs\">\n        <button\n          className={`lp-demo-tab ${activeDemo === \"chat\" ? \"active\" : \"\"}`}\n          onClick={() => setActiveDemo(\"chat\")}\n        >\n          <i className=\"bi bi-chat-dots\"></i>\n          AI Chat Mode\n        </button>\n        <button\n          className={`lp-demo-tab ${activeDemo === \"tasks\" ? \"active\" : \"\"}`}\n          onClick={() => setActiveDemo(\"tasks\")}\n        >\n          <i className=\"bi bi-list-check\"></i>\n          Task Management\n        </button>\n      </div>\n\n      <div className=\"lp-demo-content\">\n        {/* -------------------- CHAT DEMO -------------------- */}\n        {activeDemo === \"chat\" ? (\n          <div className={`lp-demo-chat ${theme === \"dark\" ? \"dark\" : \"\"}`}>\n            <div className=\"lp-demo-chat-header\">\n              <div className=\"lp-demo-chat-title\">\n                <i className=\"bi bi-robot\"></i>\n                <span>AI Task Assistant</span>\n              </div>\n              <button className=\"lp-demo-restart\" onClick={restartDemo}>\n                <i className=\"bi bi-arrow-clockwise\"></i>\n              </button>\n            </div>\n\n            <div className=\"lp-demo-chat-messages\" ref={messagesContainerRef}>\n              {messages.length === 0 && !isTyping && (\n                <div className=\"lp-demo-empty\">\n                  <i className=\"bi bi-chat-heart\"></i>\n                  <p>Watch the AI assistant in action...</p>\n                </div>\n              )}\n\n              {messages.map((msg, index) => (\n                <div key={index} className={`lp-demo-message ${msg.role}`}>\n                  <div className=\"lp-demo-message-avatar\">\n                    {msg.role === \"user\" ? (\n                      <i className=\"bi bi-person-circle\"></i>\n                    ) : (\n                      <i className=\"bi bi-robot\"></i>\n                    )}\n                  </div>\n                  <div className=\"lp-demo-message-content\">\n                    <div className=\"lp-demo-message-text\">\n                      {msg.content}\n                      <div className=\"lp-demo-message-time\">\n                        {formatTime(msg.timestamp)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              {isTyping && (\n                <div className=\"lp-demo-message assistant\">\n                  <div className=\"lp-demo-message-avatar\">\n                    <i className=\"bi bi-robot\"></i>\n                  </div>\n                  <div className=\"lp-demo-message-content\">\n                    <div className=\"lp-demo-typing\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div ref={chatEndRef} style={{ height: \"1px\" }} />\n            </div>\n\n            <div className=\"lp-demo-chat-input\">\n              <input type=\"text\" placeholder=\"Type your message...\" disabled />\n              <button disabled>\n                <i className=\"bi bi-send-fill\"></i>\n              </button>\n            </div>\n          </div>\n        ) : (\n          /* -------------------- TASK DEMO -------------------- */\n          <div className={`lp-demo-tasks ${theme === \"dark\" ? \"dark\" : \"\"}`}>\n            <div className=\"lp-demo-tasks-header\">\n              <h3>Your Tasks</h3>\n              <span className=\"lp-demo-task-count\">\n                {demoTasks.length} tasks\n              </span>\n            </div>\n\n            <div className=\"lp-demo-tasks-list\">\n              {demoTasks.map((task, index) => (\n                <div\n                  key={task.id}\n                  className=\"lp-demo-task-wrapper\"\n                  style={{ animationDelay: `${index * 0.1}s` }}\n                >\n                  {/* Reuse real TaskCard UI */}\n                  <TaskCard theme={theme} task={task} demoMode={true} />\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"lp-demo-features\">\n        <div className=\"lp-demo-feature\">\n          <i className=\"bi bi-lightning-charge\"></i>\n          <h4>Instant Task Creation</h4>\n          <p>Create tasks in seconds with natural language</p>\n        </div>\n        <div className=\"lp-demo-feature\">\n          <i className=\"bi bi-chat-quote\"></i>\n          <h4>Conversational Updates</h4>\n          <p>Update tasks through simple conversations</p>\n        </div>\n        <div className=\"lp-demo-feature\">\n          <i className=\"bi bi-bell-fill\"></i>\n          <h4>Smart Reminders</h4>\n          <p>Never miss a deadline with intelligent alerts</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default DemoSection;\n","import  { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Styles/LandingPage.css\";\nimport heroImage from \"../../assets/hero1.jpg\";\nimport { featuresData, benefitsData, testimonialsData } from \"./data\";\nimport FeaturesSection from \"./FeaturesSection\";\nimport BenefitsSection from \"./BenefitsSection\";\nimport TestimonialsSection from \"./TestimonialsSection\";\nimport DemoSection from \"./DemoSection\"; // ✨ Added Demo Section\n\nconst LandingPage = ({ theme }) => {\n  const featuresRef = useRef(null);\n  const demoRef = useRef(null); // ✨ Added demo ref\n\n  // const scrollToFeatures = (e) => {\n  //   e.preventDefault();\n  //   featuresRef.current?.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n  // };\n\n  // ✨ Added scroll to demo function\n  const scrollToDemo = (e) => {\n    e.preventDefault();\n    demoRef.current?.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n  };\n\n  return (\n    <div className={`lp-container ${theme}`}>\n      {/* Hero Section - UNCHANGED */}\n      <section className=\"lp-hero\">\n        <div className=\"lp-hero-content\">\n          <h1>Your Ultimate Task Manager</h1>\n          <p>\n            Boost your productivity and stay organized with our intuitive task\n            management tools.\n          </p>\n          <div className=\"lp-cta-buttons\">\n            <Link to=\"/register\" className=\"lp-btn lp-btn-primary\">\n              Get Started\n            </Link>\n            {/* ✨ Changed to scroll to demo instead */}\n            <button\n              onClick={scrollToDemo}\n              className=\"lp-btn lp-btn-secondary\"\n            >\n              Watch Demo\n            </button>\n          </div>\n        </div>\n        <div className=\"lp-hero-image\">\n          <img\n            style={{\n              filter: theme === \"dark\" ? \"invert(1) grayscale(100%)\" : \"none\",\n            }}\n            src={heroImage}\n            alt=\"Task Manager Illustration\"\n          />\n        </div>\n      </section>\n\n      {/* ✨ NEW: Demo Section */}\n      <div ref={demoRef}>\n        <DemoSection theme={theme} />\n      </div>\n\n      {/* Features Section - UNCHANGED */}\n      <FeaturesSection\n        features={featuresData}\n        featuresRef={featuresRef}\n        theme={theme}\n      />\n\n      {/* Benefits Section - UNCHANGED */}\n      <BenefitsSection benefits={benefitsData} />\n\n      {/* Testimonials Section - UNCHANGED */}\n      <TestimonialsSection testimonials={testimonialsData} />\n\n      {/* CTA Section - UNCHANGED */}\n      <section className=\"lp-cta\">\n        <h2>Ready to Boost Your Productivity?</h2>\n        <Link to=\"/register\" className=\"lp-btn-secondary lp-btn\">\n          Sign Up Now\n        </Link>\n      </section>\n    </div>\n  );\n};\n\nexport default LandingPage;","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { formatRelativeTime } from \"../../utils/dateUtils\";\nimport \"./Styles/TaskCard.css\";\n\nconst TaskCard = ({ theme, task, demoMode = false }) => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    if (!demoMode) {\n      navigate(`/tasks/${task.id}/edit`);\n    }\n  };\n\n  const getStripColor = (status) => {\n    switch (status) {\n      case \"completed\":\n        return \"#007a00\";\n      case \"in-progress\":\n        return \"#daa520\";\n      default:\n        return \"#a00000\";\n    }\n  };\n\n  const stripColor = getStripColor(task.status);\n\n  const getReminderSummary = () => {\n    if (!task.reminders || task.reminders.length === 0) return null;\n\n    const dailyCount = task.reminders.filter((r) => r.type === \"daily\").length;\n    const weeklyCount = task.reminders.filter(\n      (r) => r.type === \"weekly\"\n    ).length;\n    const oneTimeCount = task.reminders.filter(\n      (r) => r.type === \"one-time\" || !r.type\n    ).length;\n\n    const parts = [];\n    if (dailyCount > 0) parts.push(`Daily (${dailyCount})`);\n    if (weeklyCount > 0) parts.push(`Weekly (${weeklyCount})`);\n    if (oneTimeCount > 0) parts.push(`One-time (${oneTimeCount})`);\n\n    return parts.length > 0 ? parts.join(\", \") : null;\n  };\n\n  const reminderSummary = getReminderSummary();\n\n  return (\n    <div\n      className={`task-card ${theme === \"dark\" ? \"dark\" : \"\"}`}\n      onClick={handleClick}\n    >\n      <div className=\"task-strip\" style={{ backgroundColor: stripColor }}></div>\n\n      <div className=\"task-card-content\">\n        <i\n          className={`bi ${\n            task.status === \"completed\"\n              ? \"bi-check-circle\"\n              : task.status === \"in-progress\"\n              ? \"bi-hourglass\"\n              : \"bi-ban\"\n          } status-icon`}\n          style={{ color: stripColor }}\n        />\n\n        <h5 className=\"task-title\" style={{ color: stripColor }}>\n          {task.title}\n        </h5>\n        <p className=\"task-description\">{task.description}</p>\n\n        <div className=\"task-metadata\">\n          <div className=\"task-metadata-item\">\n            <strong>Created</strong>\n            <span>{formatRelativeTime(task.createdAt)}</span>\n          </div>\n          <div className=\"task-metadata-item\">\n            <strong>Deadline</strong>\n            <span>\n              {task.deadline\n                ? formatRelativeTime(task.deadline)\n                : \"No deadline set\"}\n            </span>\n          </div>\n        </div>\n\n        {reminderSummary && (\n          <div\n            className=\"reminder-indicator\"\n            title={`Reminders: ${reminderSummary}`}\n          >\n            <i className=\"bi bi-clock\"></i>\n            <small>{reminderSummary}</small>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCard;\n","import { format } from \"date-fns\";\n\nexport const formatRelativeTime = (dateString) => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - date) / 1000);\n  const justNowThreshold = 60;\n  if (diffInSeconds < 0) {\n    const futureDiff = Math.abs(diffInSeconds);\n    if (futureDiff < justNowThreshold) return \"Just now\";\n    if (futureDiff < 60) return `in ${futureDiff} second${futureDiff !== 1 ? \"s\" : \"\"}`;\n    if (futureDiff < 3600) return `in ${Math.ceil(futureDiff / 60)} minute${Math.ceil(futureDiff / 60) !== 1 ? \"s\" : \"\"}`;\n    if (futureDiff < 86400) return `in ${Math.ceil(futureDiff / 3600)} hour${Math.ceil(futureDiff / 3600) !== 1 ? \"s\" : \"\"}`;\n    if (futureDiff < 604800) return `in ${Math.ceil(futureDiff / 86400)} day${Math.ceil(futureDiff / 86400) !== 1 ? \"s\" : \"\"}`;\n    return format(date, \"MMM dd, yyyy\");\n  } else {\n    if (diffInSeconds < justNowThreshold) return \"Just now\";\n    if (diffInSeconds < 60) return `${diffInSeconds} second${diffInSeconds !== 1 ? \"s\" : \"\"} ago`;\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minute${Math.floor(diffInSeconds / 60) !== 1 ? \"s\" : \"\"} ago`;\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hour${Math.floor(diffInSeconds / 3600) !== 1 ? \"s\" : \"\"} ago`;\n    if (diffInSeconds < 604800) {\n      const days = Math.floor(diffInSeconds / 86400);\n      return days === 1 ? \"Yesterday\" : `${days} days ago`;\n    }\n    return format(date, \"MMM dd, yyyy\");\n  }\n};\n\nexport const convertDateToWords = (dateString) => {\n  const [year, month, day] = dateString.split('-').map(Number);\n  const date = new Date(year, month - 1, day);\n  if (isNaN(date)) return \"Invalid Date\";\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n  return date.toLocaleString(\"en-US\", options);\n};\n\nexport const formatDateTimeLocal = (dateString) => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n  return `${year}-${month}-${day}T${hours}:${minutes}`;\n};"],"names":["featuresData","title","description","image","icon","demoType","highlights","feature1","alt","feature2","feature3","feature4","benefitsData","testimonialsData","quote","author","role","demoConversation","content","timestamp","Date","now","toISOString","demoTasks","id","status","createdAt","deadline","reminders","time","unit","_ref","features","theme","featuresRef","_jsxs","className","ref","children","_jsx","map","feature","index","style","flexDirection","href","target","rel","filter","src","benefits","benefit","testimonials","testimonial","activeDemo","setActiveDemo","useState","messages","setMessages","isTyping","setIsTyping","currentMessageIndex","setCurrentMessageIndex","chatEndRef","useRef","messagesContainerRef","useEffect","length","message","timer","setTimeout","prev","clearTimeout","current","scrollTo","top","scrollHeight","behavior","concat","onClick","restartDemo","msg","toLocaleTimeString","hour","minute","height","type","placeholder","disabled","task","animationDelay","TaskCard","demoMode","demoRef","Link","to","e","_demoRef$current","preventDefault","scrollIntoView","block","heroImage","DemoSection","FeaturesSection","BenefitsSection","TestimonialsSection","navigate","useNavigate","stripColor","getStripColor","reminderSummary","getReminderSummary","dailyCount","r","weeklyCount","oneTimeCount","parts","push","join","handleClick","backgroundColor","color","formatRelativeTime","dateString","date","diffInSeconds","Math","floor","futureDiff","abs","ceil","format","days","convertDateToWords","year","month","day","split","Number","isNaN","toLocaleString","formatDateTimeLocal","getFullYear","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes"],"sourceRoot":""}