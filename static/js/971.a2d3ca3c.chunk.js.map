{"version":3,"file":"static/js/971.a2d3ca3c.chunk.js","mappings":"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","sources":["services/api.js","components/auth/ChangePassword.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://task-manager-sigma-ashen.vercel.app/api\", // Replace with your backend URL\n  // baseURL: \"http://localhost:5001/api\", // Localhost for local development\n  headers: {\n    \"ngrok-skip-browser-warning\": \"true\",\n  },\n  timeout: 30000, // 30 second timeout\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Enhanced error handler\nconst handleApiError = (error) => {\n  if (error.response) {\n    // Server responded with error\n    return {\n      message: error.response.data?.error || \"An error occurred\",\n      status: error.response.status,\n    };\n  } else if (error.request) {\n    // Request made but no response\n    return {\n      message: \"No response from server. Please check your connection.\",\n      status: 0,\n    };\n  } else {\n    // Error setting up request\n    return {\n      message: error.message || \"An unexpected error occurred\",\n      status: -1,\n    };\n  }\n};\n\n// Task-related endpoints\nexport const fetchTasks = () => api.get(\"/tasks\");\nexport const fetchTaskById = (taskId) => api.get(`/tasks/${taskId}`);\nexport const createTask = (newTask) => api.post(\"/tasks\", newTask);\nexport const updateTask = (taskId, updatedTask) =>\n  api.put(`/tasks/${taskId}`, updatedTask);\nexport const deleteTask = (taskId) => api.delete(`/tasks/${taskId}`);\nexport const updateTaskPriority = (taskId, priority) =>\n  api.put(`/tasks/${taskId}/priority`, { priority });\n\n// Authentication-related endpoints\nexport const loginUser = (email, password) => {\n  return api.post(\"/auth/login\", { email, password });\n};\n\nexport const loginWithGoogle = async (authorizationCode) => {\n  return api.post(`/auth/google`, { code: authorizationCode });\n};\n\nexport const registerUser = (firstName, lastName, email, password) => {\n  return api.post(\"/auth/register\", { firstName, lastName, email, password });\n};\n\nexport const verifyRegistrationCode = (email, verificationCode) => {\n  return api.post(\"/auth/verify-registration\", { email, verificationCode });\n};\n\nexport const sendVerificationCode = (email) => {\n  return api.post(\"/auth/resend-verification\", { email });\n};\n\nexport const sendForgotPasswordRequest = (email) => {\n  return api.post(\"/auth/forgot-password\", { email });\n};\n\nexport const resetPassword = (email, verificationCode, newPassword) => {\n  return api.post(\"/auth/verify-code\", {\n    email,\n    verificationCode,\n    newPassword,\n  });\n};\n\nexport const changePassword = (currentPassword, newPassword) => {\n  return api.post(\"/auth/change-password\", { currentPassword, newPassword });\n};\n\nexport const verifyToken = () => api.get(\"/verify-token\");\n\n// Profile-related endpoints\nexport const getProfile = async () => {\n  try {\n    const response = await api.get(\"/profile\");\n    return response.data;\n  } catch (err) {\n    console.error(\"Error fetching profile:\", err);\n    throw err;\n  }\n};\n\nexport const updateProfile = async (formData) => {\n  try {\n    const response = await api.put(\"/profile\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    return response.data;\n  } catch (err) {\n    console.error(\"Error updating profile:\", err);\n    throw err;\n  }\n};\n\n// AI-related endpoints\nexport const generateAITask = async (prompt) => {\n  try {\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    const response = await api.post(\n      \"/ai/chat\",\n      { prompt },\n      { headers: { \"x-user-timezone\": timezone } }\n    );\n    return { success: true, data: response.data };\n  } catch (error) {\n    const errorInfo = handleApiError(error);\n    return { success: false, error: errorInfo.message };\n  }\n};\n\nexport const sendAIChatMessage = async (message, conversationHistory = []) => {\n  try {\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    const response = await api.post(\n      \"/ai/chat-conversation\",\n      { message, conversationHistory },\n      { headers: { \"x-user-timezone\": timezone } }\n    );\n    return { success: true, data: response.data };\n  } catch (error) {\n    const errorInfo = handleApiError(error);\n    return { success: false, error: errorInfo.message };\n  }\n};\n\nexport default api;\n","import  { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { changePassword } from \"../../services/api\";\nimport \"../profile/ProfileOverview.css\";\nimport \"../profile/EditProfile.css\";\nimport { useAuth } from \"../../context/AuthContext\";\n\nconst ChangePassword = () => {\n  const [formData, setFormData] = useState({\n    currentPassword: \"\",\n    newPassword: \"\",\n    confirmNewPassword: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n  const { logout } = useAuth();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { currentPassword, newPassword, confirmNewPassword } = formData;\n\n    if (!currentPassword || !newPassword || !confirmNewPassword) {\n      setError(\"All fields are required.\");\n      return;\n    }\n\n    if (newPassword !== confirmNewPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n\n    try {\n      await changePassword(currentPassword, newPassword);\n      setSuccess(\"Password changed successfully!\");\n      setError(\"\");\n      setTimeout(() => navigate(\"/profile-overview\"), 2000);\n    } catch (err) {\n      console.error(\n        \"Password change error:\",\n        err.response?.data || err.message\n      );\n      setError(\n        err.response?.data?.message ||\n          \"Failed to change password. Please try again.\"\n      );\n      setSuccess(\"\");\n\n      if (err && err.status === 403) {\n        logout();\n        navigate(\"/login\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-card shadow rounded\">\n        <h2 className=\"profile-title text-center mb-4 bold-text\">\n          Change Password\n        </h2>\n        {success && <p className=\"text-success text-center\">{success}</p>}\n        {error && <p className=\"text-danger text-center\">{error}</p>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"currentPassword\" className=\"form-label\">\n              Current Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"currentPassword\"\n              name=\"currentPassword\"\n              value={formData.currentPassword}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"newPassword\" className=\"form-label\">\n              New Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"newPassword\"\n              name=\"newPassword\"\n              value={formData.newPassword}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"form-group mb-3\">\n            <label htmlFor=\"confirmNewPassword\" className=\"form-label\">\n              Confirm New Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"confirmNewPassword\"\n              name=\"confirmNewPassword\"\n              value={formData.confirmNewPassword}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"col-12 col-md-6 mb-2 mb-md-0\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary w-100\"\n                onClick={() => navigate(\"/profile-overview\")}\n              >\n                Cancel\n              </button>\n            </div>\n            <div className=\"col-12 col-md-6\">\n              <button type=\"submit\" className=\"btn btn-dark w-100\">\n                Save Changes\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n"],"names":["api","axios","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","handleApiError","_error$response$data","response","message","data","status","fetchTasks","get","fetchTaskById","taskId","createTask","newTask","post","updateTask","updatedTask","put","deleteTask","delete","updateTaskPriority","priority","loginUser","email","password","loginWithGoogle","async","code","authorizationCode","registerUser","firstName","lastName","verifyRegistrationCode","verificationCode","sendVerificationCode","sendForgotPasswordRequest","resetPassword","newPassword","changePassword","currentPassword","getProfile","err","console","updateProfile","formData","generateAITask","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","success","prompt","sendAIChatMessage","conversationHistory","arguments","length","undefined","ChangePassword","setFormData","useState","confirmNewPassword","setError","setSuccess","navigate","useNavigate","logout","useAuth","handleChange","e","name","value","target","_objectSpread","_jsx","className","children","_jsxs","onSubmit","preventDefault","setTimeout","_err$response","_err$response2","_err$response2$data","htmlFor","type","id","onChange","required","onClick"],"sourceRoot":""}