{"version":3,"file":"static/js/443.35e823b0.chunk.js","mappings":"uKAIA,MAqDA,EArD0BA,IAOnB,IAPoB,MACzBC,EAAK,KACLC,EAAI,MACJC,EAAQ,iBAAgB,QACxBC,EAAU,oCAAmC,UAC7CC,EAAS,SACTC,GACDN,EACC,OAAKE,GAGHK,EAAAA,EAAAA,KAAA,OACEC,UAAU,wEACVC,SAAS,KACTC,KAAK,SACLC,QAASL,EAASM,UAElBC,EAAAA,EAAAA,MAAA,OACEL,UAAU,uBACVE,KAAK,WACLC,QAAUG,GAAMA,EAAEC,kBAAkBH,SAAA,EAEpCC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,sBAAqBI,SAAA,EAClCL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uBAAsBI,SAAET,KACtCI,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLR,UAAU,YACV,aAAW,QACXG,QAASL,QAGbC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBI,UAChCL,EAAAA,EAAAA,KAAA,KAAGC,UAAS,QAAAS,OAAoB,SAAVhB,EAAmB,QAAU,QAAO,SAAQW,SAC/DR,OAGLS,EAAAA,EAAAA,MAAA,OAAKL,UAAU,uDAAsDI,SAAA,EACnEL,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLR,UAAU,oBACVG,QAASL,EAASM,SACnB,YAGDL,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASR,UAAU,kBAAkBG,QAASN,EAAUO,SAAC,oBApC5D,IAyCV,C,yHC7CV,MA+KA,EA/KwBZ,IAAgB,IAADkB,EAAAC,EAAA,IAAd,MAAElB,GAAOD,EAChC,MAAOoB,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,IACjD,OAAEC,IAAWC,EAAAA,EAAAA,MACZC,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,OAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAC7BO,GAAWC,EAAAA,EAAAA,OAmBjBC,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAAMC,QAAaC,EAAAA,EAAAA,MACnB,GAAID,EAAKE,QAAUF,EAAKE,OAAOF,KAAM,CACnC,MAAMG,EAZd,SAA6BC,GAC3B,IAAIC,EAAS,GAGb,MAFY,GAAGC,MAAMC,KAAK,IAAIC,WAAWJ,IACnCK,SAASC,GAAOL,GAAUM,OAAOC,aAAaF,KAC7CG,OAAOC,KAAKT,EACrB,CAO6BU,CAAoBf,EAAKE,OAAOF,MACrDA,EAAKE,OAAM,0BAAAlB,OAA6BmB,EAC1C,CACAV,EAAWO,EACb,CAAE,MAAOgB,GACPrB,EAAS,iCACLqB,GAAsB,MAAfA,EAAIC,SACb3B,IACAM,EAAS,WAEXsB,QAAQC,IAAIH,EACd,GAGFI,EAAc,GACb,CAAC9B,EAAQM,IAgCZ,OAAIF,GAEAd,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oBAAmBI,SAAA,EAChCL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeI,SAAC,sBAC9BL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,0BAAyBI,SAAEe,OAKzCF,GAKHZ,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oBAAmBI,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,8BAA6BI,SAAA,EAC1CL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iCAAgCI,SAAC,sBAC/CC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,cAAaI,SAAA,CACzBa,EAAQU,QACP5B,EAAAA,EAAAA,KAAA,OACE+C,IAAK7B,EAAQU,OACboB,IAAI,UACJ/C,UAAU,kCAGZD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBI,UAC9BL,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeI,SAC5B,GAAAK,QAAoB,QAAjBC,EAAAO,EAAQ+B,iBAAS,IAAAtC,OAAA,EAAjBA,EAAoB,KAAM,IAAED,QACd,QAAhBE,EAAAM,EAAQgC,gBAAQ,IAAAtC,OAAA,EAAhBA,EAAmB,KAAM,IACxBuC,mBAITnD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMI,SAAA,GAAAK,OAAKQ,EAAQ+B,UAAS,KAAAvC,OAAIQ,EAAQgC,aACtDlD,EAAAA,EAAAA,KAAA,KAAGC,UAAS,QAAAS,OAAoB,SAAVhB,EAAmB,QAAU,QAAO,SAAQW,SAC/Da,EAAQkC,KAAO,yBAGpB9C,EAAAA,EAAAA,MAAA,OAAKL,UAAU,uBAAsBI,SAAA,EACnCC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,aAAYI,SAAA,EACzBL,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAcI,SAAC,YACjCL,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcI,SAAEa,EAAQmC,YAE1C/C,EAAAA,EAAAA,MAAA,OAAKL,UAAU,aAAYI,SAAA,EACzBL,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAcI,SAAC,YACjCL,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcI,SAC3Ba,EAAQoC,aAAe,qBAG5BhD,EAAAA,EAAAA,MAAA,OAAKL,UAAU,aAAYI,SAAA,EACzBL,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAcI,SAAC,oBACjCL,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcI,SAC3Ba,EAAQqC,KAAMC,EAAAA,EAAAA,IAAmBtC,EAAQqC,KAAO,wBAIvDjD,EAAAA,EAAAA,MAAA,OAAKL,UAAU,WAAUI,SAAA,EACvBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BI,UAC3CL,EAAAA,EAAAA,KAAA,UACEC,UAAU,0BACVG,QAASA,IAAMkB,EAAS,oBAAoBjB,SAC7C,uBAIHL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBI,UAC9BL,EAAAA,EAAAA,KAAA,UACEC,UAAU,wBACVG,QAASA,IAAMkB,EAAS,iBAAiBjB,SAC1C,uBAKLL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUI,UACvBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQI,UACrBL,EAAAA,EAAAA,KAAA,UACEC,UAAU,uBACVG,QAASA,KA5InBU,GAAmB,EA6IQ,EACfT,SACH,mBAMPL,EAAAA,EAAAA,KAACyD,EAAAA,EAAiB,CAChB/D,MAAOA,EACPC,KAAMkB,EACNjB,MAAM,SACNC,QAAQ,oCACRC,UAjKe4D,KACnB1C,IACAF,GAAmB,GACnBQ,EAAS,SAAS,EA+JdvB,SAAUA,IAAMe,GAAmB,SA1HvCd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBI,UAChCC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,8BAA6BI,SAAA,EAC1CL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iCAAgCI,SAAC,sBAC/CC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,kBAAiBI,SAAA,EAC9BL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBACfD,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBACfK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,WAAUI,SAAA,EACvBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BI,UAC3CL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAEjBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBI,UAC9BL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAGnBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUI,UACvBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQI,UACrBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAuGnB,C,+JCjLV,MAAM0D,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,kDAETC,QAAS,CACP,6BAA8B,UAIlCJ,EAAIK,aAAaC,QAAQC,KACtBC,IACC,MAAMC,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,IACFD,EAAOJ,QAAQQ,cAAa,UAAA7D,OAAa0D,IAEpCD,CAAM,IAEd/C,GAAUoD,QAAQC,OAAOrD,KAIrB,MAAMsD,EAAaA,IAAMf,EAAIgB,IAAI,UAC3BC,EAAcC,GAAYlB,EAAImB,KAAK,SAAUD,GAC7CE,EAAaA,CAACC,EAAQC,IACjCtB,EAAIuB,IAAI,UAADxE,OAAWsE,GAAUC,GACjBE,EAAcH,GAAWrB,EAAIyB,OAAO,UAAD1E,OAAWsE,IAC9CK,EAAqBA,CAACL,EAAQM,IACzC3B,EAAIuB,IAAI,UAADxE,OAAWsE,EAAM,aAAa,CAAEM,aAG5BC,EAAYA,CAAClC,EAAOmC,IACxB7B,EAAImB,KAAK,cAAe,CAAEzB,QAAOmC,aAG7BC,EAAkBhE,SACtBkC,EAAImB,KAAK,eAAgB,CAAEY,KAAMC,IAG7BC,EAAeA,CAAC3C,EAAWC,EAAUG,EAAOmC,IAChD7B,EAAImB,KAAK,iBAAkB,CAAE7B,YAAWC,WAAUG,QAAOmC,aAGrDK,EAAyBA,CAACxC,EAAOyC,IACrCnC,EAAImB,KAAK,4BAA6B,CAAEzB,QAAOyC,qBAG3CC,EAAwB1C,GAC5BM,EAAImB,KAAK,4BAA6B,CAAEzB,UAGpC2C,EAA6B3C,GACjCM,EAAImB,KAAK,wBAAyB,CAAEzB,UAGhC4C,EAAgBA,CAAC5C,EAAOyC,EAAkBI,IAC9CvC,EAAImB,KAAK,oBAAqB,CACnCzB,QACAyC,mBACAI,gBAISC,EAAiBA,CAACC,EAAiBF,IACvCvC,EAAImB,KAAK,wBAAyB,CAAEsB,kBAAiBF,gBAMjDvE,EAAaF,UACxB,IAEE,aADuBkC,EAAIgB,IAAI,aACfjD,IAClB,CAAE,MAAOgB,GAEP,MADAE,QAAQxB,MAAM,0BAA2BsB,GACnCA,CACR,GAGW2D,EAAgB5E,UAC3B,IAME,aALuBkC,EAAIuB,IAAI,WAAYoB,EAAU,CACnDvC,QAAS,CACP,eAAgB,0BAGJrC,IAClB,CAAE,MAAOgB,GAEP,MADAE,QAAQxB,MAAM,0BAA2BsB,GACnCA,CACR,E,iECzFK,MAAM6D,EAAsBC,IACjC,MAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAM,IAAID,KACVE,EAAgBC,KAAKC,OAAOH,EAAMF,GAAQ,KAEhD,GAAIG,EAAgB,EAAG,CACrB,MAAMG,EAAaF,KAAKG,IAAIJ,GAC5B,OAAIG,EAHmB,GAGmB,WACtCA,EAAa,GAAU,MAANrG,OAAaqG,EAAU,WAAArG,OAAyB,IAAfqG,EAAmB,IAAM,IAC3EA,EAAa,KAAY,MAANrG,OAAamG,KAAKI,KAAKF,EAAa,IAAG,WAAArG,OAAyC,IAA/BmG,KAAKI,KAAKF,EAAa,IAAY,IAAM,IAC7GA,EAAa,MAAa,MAANrG,OAAamG,KAAKI,KAAKF,EAAa,MAAK,SAAArG,OAAyC,IAAjCmG,KAAKI,KAAKF,EAAa,MAAc,IAAM,IAChHA,EAAa,OAAc,MAANrG,OAAamG,KAAKI,KAAKF,EAAa,OAAM,QAAArG,OAAyC,IAAlCmG,KAAKI,KAAKF,EAAa,OAAe,IAAM,KAC/GG,EAAAA,EAAAA,IAAOT,EAAM,eACtB,CACE,GAAIG,EAVmB,GAUe,MAAO,WAC7C,GAAIA,EAAgB,GAAI,MAAM,GAANlG,OAAUkG,EAAa,WAAAlG,OAA4B,IAAlBkG,EAAsB,IAAM,GAAE,QACvF,GAAIA,EAAgB,KAAM,MAAM,GAANlG,OAAUmG,KAAKC,MAAMF,EAAgB,IAAG,WAAAlG,OAA6C,IAAnCmG,KAAKC,MAAMF,EAAgB,IAAY,IAAM,GAAE,QAC3H,GAAIA,EAAgB,MAAO,MAAM,GAANlG,OAAUmG,KAAKC,MAAMF,EAAgB,MAAK,SAAAlG,OAA6C,IAArCmG,KAAKC,MAAMF,EAAgB,MAAc,IAAM,GAAE,QAC9H,GAAIA,EAAgB,OAAQ,CAC1B,MAAMO,EAAON,KAAKC,MAAMF,EAAgB,OACxC,OAAgB,IAATO,EAAa,YAAW,GAAAzG,OAAMyG,EAAI,YAC3C,CACA,OAAOD,EAAAA,EAAAA,IAAOT,EAAM,eACtB,EAGWjD,EAAsBgD,IACjC,MAAOY,EAAMC,EAAOC,GAAOd,EAAWe,MAAM,KAAKC,IAAIC,QAC/ChB,EAAO,IAAIC,KAAKU,EAAMC,EAAQ,EAAGC,GACvC,GAAII,MAAMjB,GAAO,MAAO,eAExB,OAAOA,EAAKkB,eAAe,QADX,CAAEP,KAAM,UAAWC,MAAO,OAAQC,IAAK,WACX,EAGjCM,EAAuBpB,IAClC,MAAMC,EAAO,IAAIC,KAAKF,GAChBY,EAAOX,EAAKoB,cACZR,EAAQhF,OAAOoE,EAAKqB,WAAa,GAAGC,SAAS,EAAG,KAChDT,EAAMjF,OAAOoE,EAAKuB,WAAWD,SAAS,EAAG,KACzCE,EAAQ5F,OAAOoE,EAAKyB,YAAYH,SAAS,EAAG,KAC5CI,EAAU9F,OAAOoE,EAAK2B,cAAcL,SAAS,EAAG,KACtD,MAAM,GAANrH,OAAU0G,EAAI,KAAA1G,OAAI2G,EAAK,KAAA3G,OAAI4G,EAAG,KAAA5G,OAAIuH,EAAK,KAAAvH,OAAIyH,EAAO,C","sources":["components/ConfirmationModal.js","components/ProfileOverview.js","services/api.js","utils/dateUtils.js"],"sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Styles/ConfirmationModal.css\";\n\nconst ConfirmationModal = ({\n  theme,\n  show,\n  title = \"Confirm Action\",\n  message = \"Are you sure you want to proceed?\",\n  onConfirm,\n  onCancel,\n}) => {\n  if (!show) return null;\n\n  return (\n    <div\n      className=\"custom-modal-overlay d-flex align-items-center justify-content-center\"\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      onClick={onCancel}\n    >\n      <div\n        className=\"custom-modal-content\"\n        role=\"document\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"custom-modal-header\">\n          <h5 className=\"modal2-title fw-bold\">{title}</h5>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            aria-label=\"Close\"\n            onClick={onCancel}\n          ></button>\n        </div>\n        <div className=\"custom-modal-body\">\n          <p className={`text-${theme === \"dark\" ? \"light\" : \"muted\"} mb-4`}>\n            {message}\n          </p>\n        </div>\n        <div className=\"custom-modal-footer d-flex justify-content-end gap-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={onCancel}\n          >\n            Cancel\n          </button>\n          <button type=\"button\" className=\"btn sign-in-btn\" onClick={onConfirm}>\n            Confirm\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationModal;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getProfile } from \"../services/api\";\nimport \"../Styles/ProfileOverview.css\";\nimport { useAuth } from \"../context/AuthContext\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport { convertDateToWords } from \"../utils/dateUtils\";\n\nconst ProfileOverview = ({ theme }) => {\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\n  const { logout } = useAuth();\n  const [profile, setProfile] = useState(null);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    logout();\n    setShowLogoutModal(false);\n    navigate(\"/login\");\n  };\n\n  const logoutClicked = () => {\n    setShowLogoutModal(true);\n  };\n\n  function arrayBufferToBase64(buffer) {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\n    return window.btoa(binary);\n  }\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const data = await getProfile();\n        if (data.avatar && data.avatar.data) {\n          const base64Avatar = arrayBufferToBase64(data.avatar.data);\n          data.avatar = `data:image/jpeg;base64,${base64Avatar}`;\n        }\n        setProfile(data);\n      } catch (err) {\n        setError(\"Failed to fetch profile data.\");\n        if (err && err.status === 403) {\n          logout();\n          navigate(\"/login\");\n        }\n        console.log(err);\n      }\n    };\n\n    fetchProfile();\n  }, [logout, navigate]);\n\n  const renderSkeletonLoader = () => (\n    <div className=\"profile-container\">\n      <div className=\"profile-card shadow rounded\">\n        <h2 className=\"profile-title text-center mb-4\">Profile Overview</h2>\n        <div className=\"skeleton-loader\">\n          <div className=\"skeleton-avatar mb-4\"></div>\n          <div className=\"skeleton-line mb-3\"></div>\n          <div className=\"skeleton-line mb-3\"></div>\n          <hr />\n          <div className=\"skeleton-detail-row mb-3\"></div>\n          <div className=\"skeleton-detail-row mb-3\"></div>\n          <div className=\"skeleton-detail-row\"></div>\n          <div className=\"row mt-4\">\n            <div className=\"col-12 col-md-6 mb-2 mb-md-0\">\n              <div className=\"skeleton-button\"></div>\n            </div>\n            <div className=\"col-12 col-md-6\">\n              <div className=\"skeleton-button\"></div>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col-12\">\n              <div className=\"skeleton-button-lg\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (error) {\n    return (\n      <div className=\"profile-container\">\n        <h2 className=\"profile-title\">Profile Overview</h2>\n        <p className=\"text-danger text-center\">{error}</p>\n      </div>\n    );\n  }\n\n  if (!profile) {\n    return renderSkeletonLoader();\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-card shadow rounded\">\n        <h2 className=\"profile-title text-center mb-4\">Profile Overview</h2>\n        <div className=\"text-center\">\n          {profile.avatar ? (\n            <img\n              src={profile.avatar}\n              alt=\"Profile\"\n              className=\"rounded-circle profile-image\"\n            />\n          ) : (\n            <div className=\"initials-circle\">\n              <span className=\"initials-text\">\n                {`${profile.firstName?.[0] || \"\"}${\n                  profile.lastName?.[0] || \"\"\n                }`.toUpperCase()}\n              </span>\n            </div>\n          )}\n          <h3 className=\"mt-3\">{`${profile.firstName} ${profile.lastName}`}</h3>\n          <p className={`text-${theme === \"dark\" ? \"light\" : \"muted\"} mb-4`}>\n            {profile.bio || \"No bio available\"}\n          </p>\n        </div>\n        <div className=\"profile-details mt-4\">\n          <div className=\"detail-row\">\n            <strong className=\"detail-label\">Email:</strong>\n            <span className=\"detail-value\">{profile.email}</span>\n          </div>\n          <div className=\"detail-row\">\n            <strong className=\"detail-label\">Phone:</strong>\n            <span className=\"detail-value\">\n              {profile.phoneNumber || \"Not provided\"}\n            </span>\n          </div>\n          <div className=\"detail-row\">\n            <strong className=\"detail-label\">Date of Birth:</strong>\n            <span className=\"detail-value\">\n              {profile.dob ? convertDateToWords(profile.dob) : \"Not provided\"}\n            </span>\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col-12 col-md-6 mb-2 mb-md-0\">\n            <button\n              className=\"btn btn-secondary w-100\"\n              onClick={() => navigate(\"/change-password\")}\n            >\n              Change Password\n            </button>\n          </div>\n          <div className=\"col-12 col-md-6\">\n            <button\n              className=\"btn sign-in-btn w-100\"\n              onClick={() => navigate(\"/edit-profile\")}\n            >\n              Edit Profile\n            </button>\n          </div>\n        </div>\n        <div className=\"row mt-2\">\n          <div className=\"col-12\">\n            <button\n              className=\"btn btn-danger w-100\"\n              onClick={() => {\n                logoutClicked();\n              }}\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n      <ConfirmationModal\n        theme={theme}\n        show={showLogoutModal}\n        title=\"Logout\"\n        message=\"Are you sure you want to log out?\"\n        onConfirm={handleLogout}\n        onCancel={() => setShowLogoutModal(false)}\n      />\n    </div>\n  );\n};\n\nexport default ProfileOverview;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://task-manager-sigma-ashen.vercel.app/api\", // Replace with your backend URL\n  // baseURL: \"http://localhost:5001/api\", // Localhost for local development\n  headers: {\n    \"ngrok-skip-browser-warning\": \"true\",\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Task-related endpoints\nexport const fetchTasks = () => api.get(\"/tasks\");\nexport const createTask = (newTask) => api.post(\"/tasks\", newTask);\nexport const updateTask = (taskId, updatedTask) =>\n  api.put(`/tasks/${taskId}`, updatedTask);\nexport const deleteTask = (taskId) => api.delete(`/tasks/${taskId}`);\nexport const updateTaskPriority = (taskId, priority) =>\n  api.put(`/tasks/${taskId}/priority`, { priority });\n\n// Authentication-related endpoints\nexport const loginUser = (email, password) => {\n  return api.post(\"/auth/login\", { email, password });\n};\n\nexport const loginWithGoogle = async (authorizationCode) => {\n  return api.post(`/auth/google`, { code: authorizationCode });\n};\n\nexport const registerUser = (firstName, lastName, email, password) => {\n  return api.post(\"/auth/register\", { firstName, lastName, email, password });\n};\n\nexport const verifyRegistrationCode = (email, verificationCode) => {\n  return api.post(\"/auth/verify-registration\", { email, verificationCode });\n};\n\nexport const sendVerificationCode = (email) => {\n  return api.post(\"/auth/resend-verification\", { email });\n};\n\nexport const sendForgotPasswordRequest = (email) => {\n  return api.post(\"/auth/forgot-password\", { email });\n};\n\nexport const resetPassword = (email, verificationCode, newPassword) => {\n  return api.post(\"/auth/verify-code\", {\n    email,\n    verificationCode,\n    newPassword,\n  });\n};\n\nexport const changePassword = (currentPassword, newPassword) => {\n  return api.post(\"/auth/change-password\", { currentPassword, newPassword });\n};\n\nexport const verifyToken = () => api.get(\"/verify-token\");\n\n// Profile-related endpoints\nexport const getProfile = async () => {\n  try {\n    const response = await api.get(\"/profile\");\n    return response.data;\n  } catch (err) {\n    console.error(\"Error fetching profile:\", err);\n    throw err;\n  }\n};\n\nexport const updateProfile = async (formData) => {\n  try {\n    const response = await api.put(\"/profile\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n    return response.data;\n  } catch (err) {\n    console.error(\"Error updating profile:\", err);\n    throw err;\n  }\n};\n","import { format } from \"date-fns\";\n\nexport const formatRelativeTime = (dateString) => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - date) / 1000);\n  const justNowThreshold = 60;\n  if (diffInSeconds < 0) {\n    const futureDiff = Math.abs(diffInSeconds);\n    if (futureDiff < justNowThreshold) return \"Just now\";\n    if (futureDiff < 60) return `in ${futureDiff} second${futureDiff !== 1 ? \"s\" : \"\"}`;\n    if (futureDiff < 3600) return `in ${Math.ceil(futureDiff / 60)} minute${Math.ceil(futureDiff / 60) !== 1 ? \"s\" : \"\"}`;\n    if (futureDiff < 86400) return `in ${Math.ceil(futureDiff / 3600)} hour${Math.ceil(futureDiff / 3600) !== 1 ? \"s\" : \"\"}`;\n    if (futureDiff < 604800) return `in ${Math.ceil(futureDiff / 86400)} day${Math.ceil(futureDiff / 86400) !== 1 ? \"s\" : \"\"}`;\n    return format(date, \"MMM dd, yyyy\");\n  } else {\n    if (diffInSeconds < justNowThreshold) return \"Just now\";\n    if (diffInSeconds < 60) return `${diffInSeconds} second${diffInSeconds !== 1 ? \"s\" : \"\"} ago`;\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minute${Math.floor(diffInSeconds / 60) !== 1 ? \"s\" : \"\"} ago`;\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hour${Math.floor(diffInSeconds / 3600) !== 1 ? \"s\" : \"\"} ago`;\n    if (diffInSeconds < 604800) {\n      const days = Math.floor(diffInSeconds / 86400);\n      return days === 1 ? \"Yesterday\" : `${days} days ago`;\n    }\n    return format(date, \"MMM dd, yyyy\");\n  }\n};\n\nexport const convertDateToWords = (dateString) => {\n  const [year, month, day] = dateString.split('-').map(Number);\n  const date = new Date(year, month - 1, day);\n  if (isNaN(date)) return \"Invalid Date\";\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n  return date.toLocaleString(\"en-US\", options);\n};\n\nexport const formatDateTimeLocal = (dateString) => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n  return `${year}-${month}-${day}T${hours}:${minutes}`;\n};"],"names":["_ref","theme","show","title","message","onConfirm","onCancel","_jsx","className","tabIndex","role","onClick","children","_jsxs","e","stopPropagation","type","concat","_profile$firstName","_profile$lastName","showLogoutModal","setShowLogoutModal","useState","logout","useAuth","profile","setProfile","error","setError","navigate","useNavigate","useEffect","async","data","getProfile","avatar","base64Avatar","buffer","binary","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","arrayBufferToBase64","err","status","console","log","fetchProfile","src","alt","firstName","lastName","toUpperCase","bio","email","phoneNumber","dob","convertDateToWords","ConfirmationModal","handleLogout","api","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject","fetchTasks","get","createTask","newTask","post","updateTask","taskId","updatedTask","put","deleteTask","delete","updateTaskPriority","priority","loginUser","password","loginWithGoogle","code","authorizationCode","registerUser","verifyRegistrationCode","verificationCode","sendVerificationCode","sendForgotPasswordRequest","resetPassword","newPassword","changePassword","currentPassword","updateProfile","formData","formatRelativeTime","dateString","date","Date","now","diffInSeconds","Math","floor","futureDiff","abs","ceil","format","days","year","month","day","split","map","Number","isNaN","toLocaleString","formatDateTimeLocal","getFullYear","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes"],"sourceRoot":""}