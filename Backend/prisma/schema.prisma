datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                         Int       @id @default(autoincrement())
  firstName                  String
  lastName                   String
  email                      String    @unique
  password                   String?
  isVerified                 Boolean   @default(false)
  avatar                     String?
  phoneNumber                String?
  dob                        DateTime?
  bio                        String?
  verificationCode           String?
  verificationCodeExpiration DateTime?
  createdAt                  DateTime  @default(now())
  updatedAt                  DateTime  @updatedAt

  tasks                      Task[]
}

model Task {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus @default(NOT_STARTED)
  userId      Int
  priority    Int        @default(1)
  deadlineUTC DateTime?  @db.Timestamptz(6)
  completedAt DateTime?  @db.Timestamptz(6)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  reminders   TaskReminder[]
}

model TaskReminder {
  id           Int               @id @default(autoincrement())
  taskId       Int
  type         ReminderTypeEnum
  triggerAtUTC DateTime?         @db.Timestamptz(6) // for ONE_TIME
  hourOfDayUTC Int?              // 0-23 : Daily & Weekly
  dayOfWeek    Int?              // 0=Sun-6=Sat : Weekly only

  task         Task              @relation(fields: [taskId], references: [id], onDelete: Cascade)
  sends        ReminderSend[]
}

model ReminderSend {
  id         Int       @id @default(autoincrement())
  reminderId Int
  sentAtUTC  DateTime  @default(now()) @db.Timestamptz(6)

  reminder  TaskReminder @relation(fields: [reminderId], references: [id], onDelete: Cascade)
}

enum ReminderTypeEnum {
  ONE_TIME
  DAILY
  WEEKLY
}

enum TaskStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}
